Lalrpop Report File
========================================

Summary
----------------------------------------

Constructed 407 states

State Table
----------------------------------------

State 0 {

    AtomicTypeSpecifier     -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . DeclarationSpecifiers InitDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . DeclarationSpecifiers ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . StaticAssertDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier    -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier    -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+   -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+   -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers   -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExternalDeclaration     -> . Declaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExternalDeclaration     -> . FunctionDefinition
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExternalDeclaration+    -> . ExternalDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExternalDeclaration+    -> . ExternalDeclaration+ ExternalDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    FunctionDefinition      -> . DeclarationSpecifiers Declarator CompoundStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    FunctionDefinition      -> . DeclarationSpecifiers Declarator DeclarationList CompoundStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration -> . "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier   -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TranslationUnit         -> .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TranslationUnit         -> . ExternalDeclaration+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    __TranslationUnit       -> . TranslationUnit
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TranslationUnit ->
        lookahead EOF

    "_Atomic"               shift and goto 137
    "_Bool"                 shift and goto 138
    "_Complex"              shift and goto 139
    "_Static_assert"        shift and goto 140
    "char"                  shift and goto 141
    "double"                shift and goto 142
    "float"                 shift and goto 143
    "int"                   shift and goto 144
    "long"                  shift and goto 145
    "short"                 shift and goto 146
    "signed"                shift and goto 147
    "struct"                shift and goto 148
    "typedef"               shift and goto 149
    "union"                 shift and goto 150
    "unsigned"              shift and goto 151
    "void"                  shift and goto 152
    TypedefName             shift and goto 153

    AtomicTypeSpecifier     goto 126
    Declaration             goto 127
    DeclarationSpecifier    goto 128
    DeclarationSpecifier+   goto 1
    DeclarationSpecifiers   goto 2
    ExternalDeclaration     goto 129
    ExternalDeclaration+    goto 3
    FunctionDefinition      goto 130
    StaticAssertDeclaration goto 131
    StorageClassSpecifier   goto 132
    StructOrUnion           goto 133
    StructOrUnionSpecifier  goto 134
    TranslationUnit         goto 135
    TypeSpecifier           goto 136
}

State 1 {

    AtomicTypeSpecifier    -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier   -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier   -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+  -> DeclarationSpecifier+ . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers  -> DeclarationSpecifier+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier  -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion          -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion          -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DeclarationSpecifiers -> DeclarationSpecifier+
        lookahead "(" ")" "*" "," ";" "[" Identifier

    "_Atomic"              shift and goto 137
    "_Bool"                shift and goto 138
    "_Complex"             shift and goto 139
    "char"                 shift and goto 141
    "double"               shift and goto 142
    "float"                shift and goto 143
    "int"                  shift and goto 144
    "long"                 shift and goto 145
    "short"                shift and goto 146
    "signed"               shift and goto 147
    "struct"               shift and goto 148
    "typedef"              shift and goto 149
    "union"                shift and goto 150
    "unsigned"             shift and goto 151
    "void"                 shift and goto 152
    TypedefName            shift and goto 153

    AtomicTypeSpecifier    goto 126
    DeclarationSpecifier   goto 154
    StorageClassSpecifier  goto 132
    StructOrUnion          goto 133
    StructOrUnionSpecifier goto 134
    TypeSpecifier          goto 136
}

State 2 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration               -> DeclarationSpecifiers . InitDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration               -> DeclarationSpecifiers . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . Pointer DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    FunctionDefinition        -> DeclarationSpecifiers . Declarator CompoundStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    FunctionDefinition        -> DeclarationSpecifiers . Declarator DeclarationList CompoundStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator            -> . Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator            -> . Declarator "=" Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclaratorList        -> . InitDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclaratorList        -> . InitDeclarator ("," InitDeclarator)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                       shift and goto 7
    "*"                       shift and goto 8
    ";"                       shift and goto 158
    Identifier                shift and goto 159

    ("*" TypeQualifierList?)+ goto 155
    Declarator                goto 4
    DirectDeclarator          goto 156
    InitDeclarator            goto 5
    InitDeclaratorList        goto 157
    Pointer                   goto 6
}

State 3 {

    AtomicTypeSpecifier     -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . DeclarationSpecifiers InitDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . DeclarationSpecifiers ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . StaticAssertDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier    -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier    -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+   -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+   -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers   -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExternalDeclaration     -> . Declaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExternalDeclaration     -> . FunctionDefinition
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExternalDeclaration+    -> ExternalDeclaration+ . ExternalDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    FunctionDefinition      -> . DeclarationSpecifiers Declarator CompoundStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    FunctionDefinition      -> . DeclarationSpecifiers Declarator DeclarationList CompoundStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration -> . "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier   -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TranslationUnit         -> ExternalDeclaration+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TranslationUnit -> ExternalDeclaration+
        lookahead EOF

    "_Atomic"               shift and goto 137
    "_Bool"                 shift and goto 138
    "_Complex"              shift and goto 139
    "_Static_assert"        shift and goto 140
    "char"                  shift and goto 141
    "double"                shift and goto 142
    "float"                 shift and goto 143
    "int"                   shift and goto 144
    "long"                  shift and goto 145
    "short"                 shift and goto 146
    "signed"                shift and goto 147
    "struct"                shift and goto 148
    "typedef"               shift and goto 149
    "union"                 shift and goto 150
    "unsigned"              shift and goto 151
    "void"                  shift and goto 152
    TypedefName             shift and goto 153

    AtomicTypeSpecifier     goto 126
    Declaration             goto 127
    DeclarationSpecifier    goto 128
    DeclarationSpecifier+   goto 1
    DeclarationSpecifiers   goto 2
    ExternalDeclaration     goto 160
    FunctionDefinition      goto 130
    StaticAssertDeclaration goto 131
    StorageClassSpecifier   goto 132
    StructOrUnion           goto 133
    StructOrUnionSpecifier  goto 134
    TypeSpecifier           goto 136
}

State 4 {

    AtomicTypeSpecifier     -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CompoundStatement       -> . "{" BlockItem+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CompoundStatement       -> . "{" "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . DeclarationSpecifiers InitDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . DeclarationSpecifiers ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . StaticAssertDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration+            -> . Declaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration+            -> . Declaration+ Declaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationList         -> . Declaration+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier    -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier    -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+   -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+   -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers   -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    FunctionDefinition      -> DeclarationSpecifiers Declarator . CompoundStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    FunctionDefinition      -> DeclarationSpecifiers Declarator . DeclarationList CompoundStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator          -> Declarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator          -> Declarator . "=" Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration -> . "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier   -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction InitDeclarator -> Declarator
        lookahead "," ";"

    "="                     shift and goto 16
    "_Atomic"               shift and goto 137
    "_Bool"                 shift and goto 138
    "_Complex"              shift and goto 139
    "_Static_assert"        shift and goto 140
    "char"                  shift and goto 141
    "double"                shift and goto 142
    "float"                 shift and goto 143
    "int"                   shift and goto 144
    "long"                  shift and goto 145
    "short"                 shift and goto 146
    "signed"                shift and goto 147
    "struct"                shift and goto 148
    "typedef"               shift and goto 149
    "union"                 shift and goto 150
    "unsigned"              shift and goto 151
    "void"                  shift and goto 152
    "{"                     shift and goto 17
    TypedefName             shift and goto 153

    AtomicTypeSpecifier     goto 126
    CompoundStatement       goto 162
    Declaration             goto 163
    Declaration+            goto 13
    DeclarationList         goto 14
    DeclarationSpecifier    goto 128
    DeclarationSpecifier+   goto 1
    DeclarationSpecifiers   goto 15
    StaticAssertDeclaration goto 131
    StorageClassSpecifier   goto 132
    StructOrUnion           goto 133
    StructOrUnionSpecifier  goto 134
    TypeSpecifier           goto 136
}

State 5 {

    ("," InitDeclarator)+ -> . ("," InitDeclarator)+ "," InitDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," InitDeclarator)+ -> . "," InitDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclaratorList    -> InitDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclaratorList    -> InitDeclarator . ("," InitDeclarator)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction InitDeclaratorList -> InitDeclarator
        lookahead ";"

    ","                   shift and goto 20

    ("," InitDeclarator)+ goto 164
}

State 6 {

    Declarator       -> Pointer . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("              shift and goto 7
    Identifier       shift and goto 159

    DirectDeclarator goto 166
}

State 7 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . Pointer DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> "(" . Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                       shift and goto 7
    "*"                       shift and goto 8
    Identifier                shift and goto 159

    ("*" TypeQualifierList?)+ goto 155
    Declarator                goto 167
    DirectDeclarator          goto 156
    Pointer                   goto 6
}

State 8 {

    ("*" TypeQualifierList?)+ -> "*" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> "*" . TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier             -> . "_Atomic"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier             -> . "const"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier             -> . "restrict"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier             -> . "volatile"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+            -> . TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+            -> . TypeQualifier+ TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifierList         -> . TypeQualifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("*" TypeQualifierList?)+ -> "*"
        lookahead "(" ")" "*" "," "[" Identifier

    "_Atomic"         shift and goto 170
    "const"           shift and goto 171
    "restrict"        shift and goto 172
    "volatile"        shift and goto 173

    TypeQualifier     goto 168
    TypeQualifier+    goto 21
    TypeQualifierList goto 169
}

State 9 {

    AtomicTypeSpecifier     -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SpecifierQualifierList  -> . TypeSpecifier TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration -> . "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration       -> . SpecifierQualifierList StructDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration       -> . SpecifierQualifierList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration       -> . StaticAssertDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration+      -> . StructDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration+      -> . StructDeclaration+ StructDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclarationList   -> . StructDeclaration+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> StructOrUnion "{" . StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "_Atomic"               shift and goto 137
    "_Bool"                 shift and goto 138
    "_Complex"              shift and goto 139
    "_Static_assert"        shift and goto 140
    "char"                  shift and goto 141
    "double"                shift and goto 142
    "float"                 shift and goto 143
    "int"                   shift and goto 144
    "long"                  shift and goto 145
    "short"                 shift and goto 146
    "signed"                shift and goto 147
    "struct"                shift and goto 148
    "union"                 shift and goto 150
    "unsigned"              shift and goto 151
    "void"                  shift and goto 152
    TypedefName             shift and goto 153

    AtomicTypeSpecifier     goto 126
    SpecifierQualifierList  goto 22
    StaticAssertDeclaration goto 174
    StructDeclaration       goto 175
    StructDeclaration+      goto 23
    StructDeclarationList   goto 176
    StructOrUnion           goto 133
    StructOrUnionSpecifier  goto 134
    TypeSpecifier           goto 24
}

State 10 {

    AtomicTypeSpecifier    -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AtomicTypeSpecifier    -> "_Atomic" "(" . TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SpecifierQualifierList -> . TypeSpecifier TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion          -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion          -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeName               -> . SpecifierQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeName               -> . SpecifierQualifierList AbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "_Atomic"              shift and goto 137
    "_Bool"                shift and goto 138
    "_Complex"             shift and goto 139
    "char"                 shift and goto 141
    "double"               shift and goto 142
    "float"                shift and goto 143
    "int"                  shift and goto 144
    "long"                 shift and goto 145
    "short"                shift and goto 146
    "signed"               shift and goto 147
    "struct"               shift and goto 148
    "union"                shift and goto 150
    "unsigned"             shift and goto 151
    "void"                 shift and goto 152
    TypedefName            shift and goto 153

    AtomicTypeSpecifier    goto 126
    SpecifierQualifierList goto 26
    StructOrUnion          goto 133
    StructOrUnionSpecifier goto 134
    TypeName               goto 177
    TypeSpecifier          goto 24
}

State 11 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConstantExpression       -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration  -> "_Static_assert" "(" . ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    CastExpression           goto 180
    ConditionalExpression    goto 181
    ConstantExpression       goto 182
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 12 {

    ("*" TypeQualifierList?)+ -> ("*" TypeQualifierList?)+ "*" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> ("*" TypeQualifierList?)+ "*" . TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier             -> . "_Atomic"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier             -> . "const"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier             -> . "restrict"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier             -> . "volatile"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+            -> . TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+            -> . TypeQualifier+ TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifierList         -> . TypeQualifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("*" TypeQualifierList?)+ -> ("*" TypeQualifierList?)+ "*"
        lookahead "(" ")" "*" "," "[" Identifier

    "_Atomic"         shift and goto 170
    "const"           shift and goto 171
    "restrict"        shift and goto 172
    "volatile"        shift and goto 173

    TypeQualifier     goto 168
    TypeQualifier+    goto 21
    TypeQualifierList goto 191
}

State 13 {

    AtomicTypeSpecifier     -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . DeclarationSpecifiers InitDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . DeclarationSpecifiers ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration             -> . StaticAssertDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration+            -> Declaration+ . Declaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationList         -> Declaration+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier    -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier    -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+   -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+   -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers   -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration -> . "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier   -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DeclarationList -> Declaration+
        lookahead "{"

    "_Atomic"               shift and goto 137
    "_Bool"                 shift and goto 138
    "_Complex"              shift and goto 139
    "_Static_assert"        shift and goto 140
    "char"                  shift and goto 141
    "double"                shift and goto 142
    "float"                 shift and goto 143
    "int"                   shift and goto 144
    "long"                  shift and goto 145
    "short"                 shift and goto 146
    "signed"                shift and goto 147
    "struct"                shift and goto 148
    "typedef"               shift and goto 149
    "union"                 shift and goto 150
    "unsigned"              shift and goto 151
    "void"                  shift and goto 152
    TypedefName             shift and goto 153

    AtomicTypeSpecifier     goto 126
    Declaration             goto 192
    DeclarationSpecifier    goto 128
    DeclarationSpecifier+   goto 1
    DeclarationSpecifiers   goto 15
    StaticAssertDeclaration goto 131
    StorageClassSpecifier   goto 132
    StructOrUnion           goto 133
    StructOrUnionSpecifier  goto 134
    TypeSpecifier           goto 136
}

State 14 {

    CompoundStatement  -> . "{" BlockItem+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CompoundStatement  -> . "{" "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    FunctionDefinition -> DeclarationSpecifiers Declarator DeclarationList . CompoundStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "{"               shift and goto 17

    CompoundStatement goto 193
}

State 15 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration               -> DeclarationSpecifiers . InitDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration               -> DeclarationSpecifiers . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . Pointer DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator            -> . Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator            -> . Declarator "=" Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclaratorList        -> . InitDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclaratorList        -> . InitDeclarator ("," InitDeclarator)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                       shift and goto 7
    "*"                       shift and goto 8
    ";"                       shift and goto 158
    Identifier                shift and goto 159

    ("*" TypeQualifierList?)+ goto 155
    Declarator                goto 194
    DirectDeclarator          goto 156
    InitDeclarator            goto 5
    InitDeclaratorList        goto 157
    Pointer                   goto 6
}

State 16 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator           -> Declarator "=" . Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "{"                      shift and goto 30

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 195
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    Initializer              goto 197
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 17 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AtomicTypeSpecifier      -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    BlockItem                -> . Declaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    BlockItem                -> . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    BlockItem+               -> . BlockItem
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    BlockItem+               -> . BlockItem+ BlockItem
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CompoundStatement        -> "{" . BlockItem+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CompoundStatement        -> "{" . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration              -> . DeclarationSpecifiers InitDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration              -> . DeclarationSpecifiers ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration              -> . StaticAssertDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier     -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier     -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+    -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+    -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers    -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration  -> . "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier    -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion            -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion            -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "_Atomic"                shift and goto 137
    "_Bool"                  shift and goto 138
    "_Complex"               shift and goto 139
    "_Static_assert"         shift and goto 140
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "char"                   shift and goto 141
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "double"                 shift and goto 142
    "float"                  shift and goto 143
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "int"                    shift and goto 144
    "long"                   shift and goto 145
    "return"                 shift and goto 36
    "short"                  shift and goto 146
    "signed"                 shift and goto 147
    "struct"                 shift and goto 148
    "switch"                 shift and goto 213
    "typedef"                shift and goto 149
    "union"                  shift and goto 150
    "unsigned"               shift and goto 151
    "void"                   shift and goto 152
    "while"                  shift and goto 214
    "}"                      shift and goto 215
    Identifier               shift and goto 216
    TypedefName              shift and goto 153

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    AtomicTypeSpecifier      goto 126
    BlockItem                goto 198
    BlockItem+               goto 32
    CastExpression           goto 180
    ConditionalExpression    goto 196
    Declaration              goto 199
    DeclarationSpecifier     goto 128
    DeclarationSpecifier+    goto 1
    DeclarationSpecifiers    goto 15
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 206
    StaticAssertDeclaration  goto 131
    StorageClassSpecifier    goto 132
    Str<Identifier>          goto 207
    StructOrUnion            goto 133
    StructOrUnionSpecifier   goto 134
    TypeSpecifier            goto 136
    UnaryExpression          goto 29
}

State 18 {

    AtomicTypeSpecifier    -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier   -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier   -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+  -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+  -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers  -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator       -> DirectDeclarator "(" . IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator       -> DirectDeclarator "(" . ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator       -> DirectDeclarator "(" . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IdentifierList         -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IdentifierList         -> . Identifier ("," Identifier)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration   -> . DeclarationSpecifiers
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration   -> . DeclarationSpecifiers AbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration   -> . DeclarationSpecifiers Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList      -> . ParameterDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList      -> . ParameterDeclaration ("," ParameterDeclaration)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList      -> . ParameterDeclaration ("," ParameterDeclaration)+ "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList      -> . ParameterDeclaration "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier  -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion          -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion          -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")"                    shift and goto 219
    "_Atomic"              shift and goto 137
    "_Bool"                shift and goto 138
    "_Complex"             shift and goto 139
    "char"                 shift and goto 141
    "double"               shift and goto 142
    "float"                shift and goto 143
    "int"                  shift and goto 144
    "long"                 shift and goto 145
    "short"                shift and goto 146
    "signed"               shift and goto 147
    "struct"               shift and goto 148
    "typedef"              shift and goto 149
    "union"                shift and goto 150
    "unsigned"             shift and goto 151
    "void"                 shift and goto 152
    Identifier             shift and goto 39
    TypedefName            shift and goto 153

    AtomicTypeSpecifier    goto 126
    DeclarationSpecifier   goto 128
    DeclarationSpecifier+  goto 1
    DeclarationSpecifiers  goto 37
    IdentifierList         goto 217
    ParameterDeclaration   goto 38
    ParameterTypeList      goto 218
    StorageClassSpecifier  goto 132
    StructOrUnion          goto 133
    StructOrUnionSpecifier goto 134
    TypeSpecifier          goto 136
}

State 19 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" . TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" . TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" . TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" . TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" . "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" . "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "_Atomic"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "const"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "restrict"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "volatile"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier+ TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifierList        -> . TypeQualifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "]"                      shift and goto 221
    "_Atomic"                shift and goto 170
    "const"                  shift and goto 171
    "restrict"               shift and goto 172
    "static"                 shift and goto 41
    "volatile"               shift and goto 173

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 220
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    TypeQualifier            goto 168
    TypeQualifier+           goto 21
    TypeQualifierList        goto 40
    UnaryExpression          goto 29
}

State 20 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," InitDeclarator)+     -> "," . InitDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . Pointer DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator            -> . Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator            -> . Declarator "=" Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                       shift and goto 7
    "*"                       shift and goto 8
    Identifier                shift and goto 159

    ("*" TypeQualifierList?)+ goto 155
    Declarator                goto 194
    DirectDeclarator          goto 156
    InitDeclarator            goto 222
    Pointer                   goto 6
}

State 21 {

    TypeQualifier     -> . "_Atomic"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier     -> . "const"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier     -> . "restrict"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier     -> . "volatile"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+    -> TypeQualifier+ . TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifierList -> TypeQualifier+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeQualifierList -> TypeQualifier+
        lookahead "(" ")" "*" "," "[" "]" "static" Identifier

    "_Atomic"     shift and goto 170
    "const"       shift and goto 171
    "restrict"    shift and goto 172
    "volatile"    shift and goto 173

    TypeQualifier goto 224
}

State 22 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . Pointer DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration         -> SpecifierQualifierList . StructDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration         -> SpecifierQualifierList . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclarator          -> . Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaratorList      -> . StructDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaratorList      -> . StructDeclarator ("," StructDeclarator)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                       shift and goto 7
    "*"                       shift and goto 8
    ";"                       shift and goto 227
    Identifier                shift and goto 159

    ("*" TypeQualifierList?)+ goto 155
    Declarator                goto 225
    DirectDeclarator          goto 156
    Pointer                   goto 6
    StructDeclarator          goto 43
    StructDeclaratorList      goto 226
}

State 23 {

    AtomicTypeSpecifier     -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SpecifierQualifierList  -> . TypeSpecifier TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration -> . "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration       -> . SpecifierQualifierList StructDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration       -> . SpecifierQualifierList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration       -> . StaticAssertDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration+      -> StructDeclaration+ . StructDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclarationList   -> StructDeclaration+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructDeclarationList -> StructDeclaration+
        lookahead "}"

    "_Atomic"               shift and goto 137
    "_Bool"                 shift and goto 138
    "_Complex"              shift and goto 139
    "_Static_assert"        shift and goto 140
    "char"                  shift and goto 141
    "double"                shift and goto 142
    "float"                 shift and goto 143
    "int"                   shift and goto 144
    "long"                  shift and goto 145
    "short"                 shift and goto 146
    "signed"                shift and goto 147
    "struct"                shift and goto 148
    "union"                 shift and goto 150
    "unsigned"              shift and goto 151
    "void"                  shift and goto 152
    TypedefName             shift and goto 153

    AtomicTypeSpecifier     goto 126
    SpecifierQualifierList  goto 22
    StaticAssertDeclaration goto 174
    StructDeclaration       goto 228
    StructOrUnion           goto 133
    StructOrUnionSpecifier  goto 134
    TypeSpecifier           goto 24
}

State 24 {

    SpecifierQualifierList -> TypeSpecifier . TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier          -> . "_Atomic"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier          -> . "const"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier          -> . "restrict"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier          -> . "volatile"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "_Atomic"     shift and goto 170
    "const"       shift and goto 171
    "restrict"    shift and goto 172
    "volatile"    shift and goto 173

    TypeQualifier goto 230
}

State 25 {

    AtomicTypeSpecifier     -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SpecifierQualifierList  -> . TypeSpecifier TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration -> . "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration       -> . SpecifierQualifierList StructDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration       -> . SpecifierQualifierList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration       -> . StaticAssertDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration+      -> . StructDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaration+      -> . StructDeclaration+ StructDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclarationList   -> . StructDeclaration+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion           -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier  -> StructOrUnion Identifier "{" . StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier           -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "_Atomic"               shift and goto 137
    "_Bool"                 shift and goto 138
    "_Complex"              shift and goto 139
    "_Static_assert"        shift and goto 140
    "char"                  shift and goto 141
    "double"                shift and goto 142
    "float"                 shift and goto 143
    "int"                   shift and goto 144
    "long"                  shift and goto 145
    "short"                 shift and goto 146
    "signed"                shift and goto 147
    "struct"                shift and goto 148
    "union"                 shift and goto 150
    "unsigned"              shift and goto 151
    "void"                  shift and goto 152
    TypedefName             shift and goto 153

    AtomicTypeSpecifier     goto 126
    SpecifierQualifierList  goto 22
    StaticAssertDeclaration goto 174
    StructDeclaration       goto 175
    StructDeclaration+      goto 23
    StructDeclarationList   goto 231
    StructOrUnion           goto 133
    StructOrUnionSpecifier  goto 134
    TypeSpecifier           goto 24
}

State 26 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . DirectAbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . Pointer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . Pointer DirectAbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" AbstractDeclarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeName                  -> SpecifierQualifierList .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeName                  -> SpecifierQualifierList . AbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeName -> SpecifierQualifierList
        lookahead ")"

    "("                       shift and goto 45
    "*"                       shift and goto 8
    "["                       shift and goto 46

    ("*" TypeQualifierList?)+ goto 155
    AbstractDeclarator        goto 232
    DirectAbstractDeclarator  goto 233
    Pointer                   goto 44
}

State 27 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> EqualityExpression . AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> EqualityExpression . "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> EqualityExpression . "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "!="                     shift and goto 50
    "("                      shift and goto 28
    "=="                     shift and goto 51

    AdditiveExpression       goto 178
    AndExpression            goto 235
    CastExpression           goto 180
    EqualityExpression       goto 27
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 28 {

    AtomicTypeSpecifier    -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression         -> "(" . TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SpecifierQualifierList -> . TypeSpecifier TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion          -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion          -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeName               -> . SpecifierQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeName               -> . SpecifierQualifierList AbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier          -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "_Atomic"              shift and goto 137
    "_Bool"                shift and goto 138
    "_Complex"             shift and goto 139
    "char"                 shift and goto 141
    "double"               shift and goto 142
    "float"                shift and goto 143
    "int"                  shift and goto 144
    "long"                 shift and goto 145
    "short"                shift and goto 146
    "signed"               shift and goto 147
    "struct"               shift and goto 148
    "union"                shift and goto 150
    "unsigned"             shift and goto 151
    "void"                 shift and goto 152
    TypedefName            shift and goto 153

    AtomicTypeSpecifier    goto 126
    SpecifierQualifierList goto 26
    StructOrUnion          goto 133
    StructOrUnionSpecifier goto 134
    TypeName               goto 236
    TypeSpecifier          goto 24
}

State 29 {

    AssignmentExpression -> UnaryExpression . AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . "%="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . "&="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . "*="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . "+="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . "-="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . "/="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . "<<="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . "="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . ">>="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . "^="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentOperator   -> . "|="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression       -> UnaryExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction CastExpression -> UnaryExpression
        lookahead "!=" "%" "(" "*" "+" "-" "/" "<" "<<" "<=" "==" ">" ">=" ">>"

    "%="               shift and goto 237
    "&="               shift and goto 238
    "*="               shift and goto 239
    "+="               shift and goto 240
    "-="               shift and goto 241
    "/="               shift and goto 242
    "<<="              shift and goto 243
    "="                shift and goto 244
    ">>="              shift and goto 245
    "^="               shift and goto 246
    "|="               shift and goto 247

    AssignmentOperator goto 66
}

State 30 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designation              -> . DesignatorList "="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator               -> . "." Str<Identifier>
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator               -> . "[" ConstantExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+              -> . Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+              -> . Designator+ Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DesignatorList           -> . Designator+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" . Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" . Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" . Designation Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" . Designation Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" . Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" . Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" . Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" . Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "."                      shift and goto 70
    "["                      shift and goto 71
    "{"                      shift and goto 30

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 195
    CastExpression           goto 180
    ConditionalExpression    goto 196
    Designation              goto 67
    Designator               goto 248
    Designator+              goto 68
    DesignatorList           goto 249
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    Initializer              goto 69
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 31 {

    ("," AssignmentExpression)+ -> . ("," AssignmentExpression)+ "," AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," AssignmentExpression)+ -> . "," AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression                  -> AssignmentExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression                  -> AssignmentExpression . ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Expression -> AssignmentExpression
        lookahead ")" ":" ";"

    ","                         shift and goto 72

    ("," AssignmentExpression)+ goto 250
}

State 32 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AtomicTypeSpecifier      -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    BlockItem                -> . Declaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    BlockItem                -> . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    BlockItem+               -> BlockItem+ . BlockItem
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CompoundStatement        -> "{" BlockItem+ . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration              -> . DeclarationSpecifiers InitDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration              -> . DeclarationSpecifiers ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration              -> . StaticAssertDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier     -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier     -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+    -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+    -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers    -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration  -> . "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier    -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion            -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion            -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "_Atomic"                shift and goto 137
    "_Bool"                  shift and goto 138
    "_Complex"               shift and goto 139
    "_Static_assert"         shift and goto 140
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "char"                   shift and goto 141
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "double"                 shift and goto 142
    "float"                  shift and goto 143
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "int"                    shift and goto 144
    "long"                   shift and goto 145
    "return"                 shift and goto 36
    "short"                  shift and goto 146
    "signed"                 shift and goto 147
    "struct"                 shift and goto 148
    "switch"                 shift and goto 213
    "typedef"                shift and goto 149
    "union"                  shift and goto 150
    "unsigned"               shift and goto 151
    "void"                   shift and goto 152
    "while"                  shift and goto 214
    "}"                      shift and goto 252
    Identifier               shift and goto 216
    TypedefName              shift and goto 153

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    AtomicTypeSpecifier      goto 126
    BlockItem                goto 251
    CastExpression           goto 180
    ConditionalExpression    goto 196
    Declaration              goto 199
    DeclarationSpecifier     goto 128
    DeclarationSpecifier+    goto 1
    DeclarationSpecifiers    goto 15
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 206
    StaticAssertDeclaration  goto 131
    StorageClassSpecifier    goto 132
    Str<Identifier>          goto 207
    StructOrUnion            goto 133
    StructOrUnionSpecifier   goto 134
    TypeSpecifier            goto 136
    UnaryExpression          goto 29
}

State 33 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConstantExpression       -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> "case" . ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    CastExpression           goto 180
    ConditionalExpression    goto 181
    ConstantExpression       goto 255
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 34 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "do" . Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 257
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 35 {

    JumpStatement   -> "goto" . Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier> -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Identifier      shift and goto 216

    Str<Identifier> goto 258
}

State 36 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> "return" . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> "return" . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    ";"                      shift and goto 260

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 259
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 37 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . DirectAbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . Pointer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . Pointer DirectAbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . Pointer DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" AbstractDeclarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration      -> DeclarationSpecifiers .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration      -> DeclarationSpecifiers . AbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration      -> DeclarationSpecifiers . Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ParameterDeclaration -> DeclarationSpecifiers
        lookahead ")" ","

    "("                       shift and goto 80
    "*"                       shift and goto 8
    "["                       shift and goto 46
    Identifier                shift and goto 159

    ("*" TypeQualifierList?)+ goto 155
    AbstractDeclarator        goto 261
    Declarator                goto 262
    DirectAbstractDeclarator  goto 233
    DirectDeclarator          goto 156
    Pointer                   goto 79
}

State 38 {

    ("," ParameterDeclaration)+ -> . ("," ParameterDeclaration)+ "," ParameterDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," ParameterDeclaration)+ -> . "," ParameterDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList           -> ParameterDeclaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList           -> ParameterDeclaration . ("," ParameterDeclaration)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList           -> ParameterDeclaration . ("," ParameterDeclaration)+ "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList           -> ParameterDeclaration . "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ParameterTypeList -> ParameterDeclaration
        lookahead ")"

    ","                         shift and goto 81

    ("," ParameterDeclaration)+ goto 264
}

State 39 {

    ("," Identifier)+ -> . ("," Identifier)+ "," Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Identifier)+ -> . "," Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IdentifierList    -> Identifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IdentifierList    -> Identifier . ("," Identifier)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IdentifierList -> Identifier
        lookahead ")"

    ","               shift and goto 267

    ("," Identifier)+ goto 266
}

State 40 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" TypeQualifierList . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" TypeQualifierList . "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" TypeQualifierList . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" TypeQualifierList . "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "*"                      shift and goto 270
    "]"                      shift and goto 271
    "static"                 shift and goto 82

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 269
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 41 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" "static" . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" "static" . TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "_Atomic"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "const"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "restrict"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "volatile"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier+ TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifierList        -> . TypeQualifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "_Atomic"                shift and goto 170
    "const"                  shift and goto 171
    "restrict"               shift and goto 172
    "volatile"               shift and goto 173

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 272
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    TypeQualifier            goto 168
    TypeQualifier+           goto 21
    TypeQualifierList        goto 83
    UnaryExpression          goto 29
}

State 42 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," InitDeclarator)+     -> ("," InitDeclarator)+ "," . InitDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . Pointer DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator            -> . Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator            -> . Declarator "=" Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                       shift and goto 7
    "*"                       shift and goto 8
    Identifier                shift and goto 159

    ("*" TypeQualifierList?)+ goto 155
    Declarator                goto 194
    DirectDeclarator          goto 156
    InitDeclarator            goto 273
    Pointer                   goto 6
}

State 43 {

    ("," StructDeclarator)+ -> . ("," StructDeclarator)+ "," StructDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," StructDeclarator)+ -> . "," StructDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaratorList    -> StructDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaratorList    -> StructDeclarator . ("," StructDeclarator)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructDeclaratorList -> StructDeclarator
        lookahead ";"

    ","                     shift and goto 84

    ("," StructDeclarator)+ goto 274
}

State 44 {

    AbstractDeclarator       -> Pointer .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator       -> Pointer . DirectAbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "(" AbstractDeclarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AbstractDeclarator -> Pointer
        lookahead ")"

    "("                      shift and goto 45
    "["                      shift and goto 46

    DirectAbstractDeclarator goto 277
}

State 45 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . DirectAbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . Pointer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . Pointer DirectAbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AtomicTypeSpecifier       -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier      -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier      -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+     -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+     -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers     -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" AbstractDeclarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> "(" . AbstractDeclarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> "(" . ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> "(" . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration      -> . DeclarationSpecifiers
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration      -> . DeclarationSpecifiers AbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration      -> . DeclarationSpecifiers Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList         -> . ParameterDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList         -> . ParameterDeclaration ("," ParameterDeclaration)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList         -> . ParameterDeclaration ("," ParameterDeclaration)+ "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList         -> . ParameterDeclaration "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier     -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion             -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion             -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier    -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier    -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier    -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                       shift and goto 45
    ")"                       shift and goto 280
    "*"                       shift and goto 8
    "["                       shift and goto 46
    "_Atomic"                 shift and goto 137
    "_Bool"                   shift and goto 138
    "_Complex"                shift and goto 139
    "char"                    shift and goto 141
    "double"                  shift and goto 142
    "float"                   shift and goto 143
    "int"                     shift and goto 144
    "long"                    shift and goto 145
    "short"                   shift and goto 146
    "signed"                  shift and goto 147
    "struct"                  shift and goto 148
    "typedef"                 shift and goto 149
    "union"                   shift and goto 150
    "unsigned"                shift and goto 151
    "void"                    shift and goto 152
    TypedefName               shift and goto 153

    ("*" TypeQualifierList?)+ goto 155
    AbstractDeclarator        goto 278
    AtomicTypeSpecifier       goto 126
    DeclarationSpecifier      goto 128
    DeclarationSpecifier+     goto 1
    DeclarationSpecifiers     goto 37
    DirectAbstractDeclarator  goto 233
    ParameterDeclaration      goto 38
    ParameterTypeList         goto 279
    Pointer                   goto 44
    StorageClassSpecifier     goto 132
    StructOrUnion             goto 133
    StructOrUnionSpecifier    goto 134
    TypeSpecifier             goto 136
}

State 46 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" . TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" . TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" . TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" . "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" . "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" . "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "_Atomic"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "const"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "restrict"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "volatile"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier+ TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifierList        -> . TypeQualifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "*"                      shift and goto 282
    "]"                      shift and goto 283
    "_Atomic"                shift and goto 170
    "const"                  shift and goto 171
    "restrict"               shift and goto 172
    "static"                 shift and goto 88
    "volatile"               shift and goto 173

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 281
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    TypeQualifier            goto 168
    TypeQualifier+           goto 21
    TypeQualifierList        goto 87
    UnaryExpression          goto 29
}

State 47 {

    AdditiveExpression       -> AdditiveExpression "+" . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    CastExpression           goto 180
    MultiplicativeExpression goto 284
    UnaryExpression          goto 190
}

State 48 {

    AdditiveExpression       -> AdditiveExpression "-" . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    CastExpression           goto 180
    MultiplicativeExpression goto 285
    UnaryExpression          goto 190
}

State 49 {

    StaticAssertDeclaration -> "_Static_assert" "(" ConstantExpression "," . Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<StringLiteral>      -> . StringLiteral
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StringLiteral      shift and goto 287

    Str<StringLiteral> goto 286
}

State 50 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> EqualityExpression "!=" . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    CastExpression           goto 180
    MultiplicativeExpression goto 187
    RelationalExpression     goto 288
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 51 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> EqualityExpression "==" . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    CastExpression           goto 180
    MultiplicativeExpression goto 187
    RelationalExpression     goto 289
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 52 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> ExclusiveOrExpression "^" . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 290
    CastExpression           goto 180
    EqualityExpression       goto 27
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 53 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> InclusiveOrExpression "|" . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    CastExpression           goto 180
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 291
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 54 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> LogicalAndExpression "&&" . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    CastExpression           goto 180
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 292
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 55 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> LogicalOrExpression "?" . Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 293
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 56 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> LogicalOrExpression "||" . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    CastExpression           goto 180
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 294
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 57 {

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression "%" . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("             shift and goto 28

    CastExpression  goto 295
    UnaryExpression goto 190
}

State 58 {

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression "*" . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("             shift and goto 28

    CastExpression  goto 296
    UnaryExpression goto 190
}

State 59 {

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression "/" . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("             shift and goto 28

    CastExpression  goto 297
    UnaryExpression goto 190
}

State 60 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> RelationalExpression "<" . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    CastExpression           goto 180
    MultiplicativeExpression goto 187
    ShiftExpression          goto 298
    UnaryExpression          goto 190
}

State 61 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> RelationalExpression "<=" . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    CastExpression           goto 180
    MultiplicativeExpression goto 187
    ShiftExpression          goto 299
    UnaryExpression          goto 190
}

State 62 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> RelationalExpression ">" . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    CastExpression           goto 180
    MultiplicativeExpression goto 187
    ShiftExpression          goto 300
    UnaryExpression          goto 190
}

State 63 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> RelationalExpression ">=" . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    CastExpression           goto 180
    MultiplicativeExpression goto 187
    ShiftExpression          goto 301
    UnaryExpression          goto 190
}

State 64 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> ShiftExpression "<<" . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 302
    CastExpression           goto 180
    MultiplicativeExpression goto 187
    UnaryExpression          goto 190
}

State 65 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> ShiftExpression ">>" . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 303
    CastExpression           goto 180
    MultiplicativeExpression goto 187
    UnaryExpression          goto 190
}

State 66 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> UnaryExpression AssignmentOperator . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 304
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 67 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" Designation . Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" Designation . Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" Designation . Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Designation Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> "{" Designation . Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer              -> . "{" Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "{"                      shift and goto 30

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 195
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    Initializer              goto 91
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 68 {

    Designator     -> . "." Str<Identifier>
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator     -> . "[" ConstantExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+    -> Designator+ . Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DesignatorList -> Designator+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DesignatorList -> Designator+
        lookahead "="

    "."        shift and goto 70
    "["        shift and goto 71

    Designator goto 305
}

State 69 {

    ("," Designation? Initializer)+ -> . ("," Designation? Initializer)+ "," Designation Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> . ("," Designation? Initializer)+ "," Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> . "," Designation Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> . "," Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Initializer . ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Initializer . ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Initializer . "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Initializer . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ","                             shift and goto 92
    "}"                             shift and goto 308

    ("," Designation? Initializer)+ goto 307
}

State 70 {

    Designator      -> "." . Str<Identifier>
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier> -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Identifier      shift and goto 216

    Str<Identifier> goto 309
}

State 71 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConstantExpression       -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator               -> "[" . ConstantExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    CastExpression           goto 180
    ConditionalExpression    goto 181
    ConstantExpression       goto 310
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 72 {

    ("," AssignmentExpression)+ -> "," . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression          -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression          -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression          -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression               -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression        -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression        -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression              -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression              -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression       -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression       -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression          -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression          -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression          -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression       -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression       -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression       -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression       -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression        -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression        -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression         -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression         -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression    -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression    -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression    -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression    -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression        -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression        -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression        -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression        -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression        -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression             -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression             -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression             -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 311
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 73 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> Str<Identifier> ":" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 312
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 74 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> "default" ":" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 313
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 75 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AtomicTypeSpecifier      -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration              -> . DeclarationSpecifiers InitDeclaratorList ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration              -> . DeclarationSpecifiers ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declaration              -> . StaticAssertDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier     -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier     -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+    -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+    -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers    -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ForInitializerPart       -> . Declaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" . Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" . Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" . ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" . ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" . ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" . ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" . ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" . ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StaticAssertDeclaration  -> . "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier    -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion            -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion            -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    ";"                      shift and goto 96
    "_Atomic"                shift and goto 137
    "_Bool"                  shift and goto 138
    "_Complex"               shift and goto 139
    "_Static_assert"         shift and goto 140
    "char"                   shift and goto 141
    "double"                 shift and goto 142
    "float"                  shift and goto 143
    "int"                    shift and goto 144
    "long"                   shift and goto 145
    "short"                  shift and goto 146
    "signed"                 shift and goto 147
    "struct"                 shift and goto 148
    "typedef"                shift and goto 149
    "union"                  shift and goto 150
    "unsigned"               shift and goto 151
    "void"                   shift and goto 152
    TypedefName              shift and goto 153

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    AtomicTypeSpecifier      goto 126
    CastExpression           goto 180
    ConditionalExpression    goto 196
    Declaration              goto 315
    DeclarationSpecifier     goto 128
    DeclarationSpecifier+    goto 1
    DeclarationSpecifiers    goto 15
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 316
    ForInitializerPart       goto 95
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    StaticAssertDeclaration  goto 131
    StorageClassSpecifier    goto 132
    StructOrUnion            goto 133
    StructOrUnionSpecifier   goto 134
    TypeSpecifier            goto 136
    UnaryExpression          goto 29
}

State 76 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> "if" "(" . Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 318
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 77 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> "switch" "(" . Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 320
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 78 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "while" "(" . Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 321
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 79 {

    AbstractDeclarator       -> Pointer .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator       -> Pointer . DirectAbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator               -> Pointer . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . DirectAbstractDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "(" AbstractDeclarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> . "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AbstractDeclarator -> Pointer
        lookahead ")" ","

    "("                      shift and goto 80
    "["                      shift and goto 46
    Identifier               shift and goto 159

    DirectAbstractDeclarator goto 277
    DirectDeclarator         goto 166
}

State 80 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . DirectAbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . Pointer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AbstractDeclarator        -> . Pointer DirectAbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AtomicTypeSpecifier       -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier      -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier      -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+     -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+     -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers     -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . Pointer DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . DirectAbstractDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" AbstractDeclarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> "(" . AbstractDeclarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> "(" . ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> "(" . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator  -> . "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> "(" . Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration      -> . DeclarationSpecifiers
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration      -> . DeclarationSpecifiers AbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration      -> . DeclarationSpecifiers Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList         -> . ParameterDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList         -> . ParameterDeclaration ("," ParameterDeclaration)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList         -> . ParameterDeclaration ("," ParameterDeclaration)+ "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList         -> . ParameterDeclaration "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier     -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion             -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion             -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier    -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier    -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier    -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier             -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                       shift and goto 80
    ")"                       shift and goto 280
    "*"                       shift and goto 8
    "["                       shift and goto 46
    "_Atomic"                 shift and goto 137
    "_Bool"                   shift and goto 138
    "_Complex"                shift and goto 139
    "char"                    shift and goto 141
    "double"                  shift and goto 142
    "float"                   shift and goto 143
    "int"                     shift and goto 144
    "long"                    shift and goto 145
    "short"                   shift and goto 146
    "signed"                  shift and goto 147
    "struct"                  shift and goto 148
    "typedef"                 shift and goto 149
    "union"                   shift and goto 150
    "unsigned"                shift and goto 151
    "void"                    shift and goto 152
    Identifier                shift and goto 159
    TypedefName               shift and goto 153

    ("*" TypeQualifierList?)+ goto 155
    AbstractDeclarator        goto 278
    AtomicTypeSpecifier       goto 126
    DeclarationSpecifier      goto 128
    DeclarationSpecifier+     goto 1
    DeclarationSpecifiers     goto 37
    Declarator                goto 167
    DirectAbstractDeclarator  goto 233
    DirectDeclarator          goto 156
    ParameterDeclaration      goto 38
    ParameterTypeList         goto 279
    Pointer                   goto 79
    StorageClassSpecifier     goto 132
    StructOrUnion             goto 133
    StructOrUnionSpecifier    goto 134
    TypeSpecifier             goto 136
}

State 81 {

    ("," ParameterDeclaration)+ -> "," . ParameterDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AtomicTypeSpecifier         -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier        -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier        -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+       -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+       -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers       -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration        -> . DeclarationSpecifiers
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration        -> . DeclarationSpecifiers AbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration        -> . DeclarationSpecifiers Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList           -> ParameterDeclaration "," . "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier       -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion               -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion               -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier      -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier      -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier      -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "..."                  shift and goto 323
    "_Atomic"              shift and goto 137
    "_Bool"                shift and goto 138
    "_Complex"             shift and goto 139
    "char"                 shift and goto 141
    "double"               shift and goto 142
    "float"                shift and goto 143
    "int"                  shift and goto 144
    "long"                 shift and goto 145
    "short"                shift and goto 146
    "signed"               shift and goto 147
    "struct"               shift and goto 148
    "typedef"              shift and goto 149
    "union"                shift and goto 150
    "unsigned"             shift and goto 151
    "void"                 shift and goto 152
    TypedefName            shift and goto 153

    AtomicTypeSpecifier    goto 126
    DeclarationSpecifier   goto 128
    DeclarationSpecifier+  goto 1
    DeclarationSpecifiers  goto 37
    ParameterDeclaration   goto 322
    StorageClassSpecifier  goto 132
    StructOrUnion          goto 133
    StructOrUnionSpecifier goto 134
    TypeSpecifier          goto 136
}

State 82 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" TypeQualifierList "static" . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 328
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 83 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator         -> DirectDeclarator "[" "static" TypeQualifierList . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 330
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 84 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," StructDeclarator)+   -> "," . StructDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . Pointer DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclarator          -> . Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                       shift and goto 7
    "*"                       shift and goto 8
    Identifier                shift and goto 159

    ("*" TypeQualifierList?)+ goto 155
    Declarator                goto 225
    DirectDeclarator          goto 156
    Pointer                   goto 6
    StructDeclarator          goto 331
}

State 85 {

    AtomicTypeSpecifier      -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier     -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier     -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+    -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+    -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers    -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "(" . ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "(" . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration     -> . DeclarationSpecifiers
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration     -> . DeclarationSpecifiers AbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration     -> . DeclarationSpecifiers Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList        -> . ParameterDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList        -> . ParameterDeclaration ("," ParameterDeclaration)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList        -> . ParameterDeclaration ("," ParameterDeclaration)+ "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList        -> . ParameterDeclaration "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier    -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion            -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion            -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier   -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier            -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")"                    shift and goto 333
    "_Atomic"              shift and goto 137
    "_Bool"                shift and goto 138
    "_Complex"             shift and goto 139
    "char"                 shift and goto 141
    "double"               shift and goto 142
    "float"                shift and goto 143
    "int"                  shift and goto 144
    "long"                 shift and goto 145
    "short"                shift and goto 146
    "signed"               shift and goto 147
    "struct"               shift and goto 148
    "typedef"              shift and goto 149
    "union"                shift and goto 150
    "unsigned"             shift and goto 151
    "void"                 shift and goto 152
    TypedefName            shift and goto 153

    AtomicTypeSpecifier    goto 126
    DeclarationSpecifier   goto 128
    DeclarationSpecifier+  goto 1
    DeclarationSpecifiers  goto 37
    ParameterDeclaration   goto 38
    ParameterTypeList      goto 332
    StorageClassSpecifier  goto 132
    StructOrUnion          goto 133
    StructOrUnionSpecifier goto 134
    TypeSpecifier          goto 136
}

State 86 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" . TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" . TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" . TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" . "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" . "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" . "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "_Atomic"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "const"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "restrict"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "volatile"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier+ TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifierList        -> . TypeQualifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "*"                      shift and goto 335
    "]"                      shift and goto 336
    "_Atomic"                shift and goto 170
    "const"                  shift and goto 171
    "restrict"               shift and goto 172
    "static"                 shift and goto 100
    "volatile"               shift and goto 173

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 334
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    TypeQualifier            goto 168
    TypeQualifier+           goto 21
    TypeQualifierList        goto 99
    UnaryExpression          goto 29
}

State 87 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" TypeQualifierList . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" TypeQualifierList . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" TypeQualifierList . "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "]"                      shift and goto 341
    "static"                 shift and goto 101

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 340
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 88 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" "static" . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" "static" . TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "_Atomic"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "const"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "restrict"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "volatile"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier+ TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifierList        -> . TypeQualifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "_Atomic"                shift and goto 170
    "const"                  shift and goto 171
    "restrict"               shift and goto 172
    "volatile"               shift and goto 173

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 343
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    TypeQualifier            goto 168
    TypeQualifier+           goto 21
    TypeQualifierList        goto 102
    UnaryExpression          goto 29
}

State 89 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> EqualityExpression AndExpression "&" . EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    CastExpression           goto 180
    EqualityExpression       goto 345
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 90 {

    CastExpression -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression -> "(" TypeName ")" . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("             shift and goto 28

    CastExpression  goto 346
    UnaryExpression goto 190
}

State 91 {

    ("," Designation? Initializer)+ -> . ("," Designation? Initializer)+ "," Designation Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> . ("," Designation? Initializer)+ "," Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> . "," Designation Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> . "," Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Designation Initializer . ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Designation Initializer . ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Designation Initializer . "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Designation Initializer . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ","                             shift and goto 104
    "}"                             shift and goto 348

    ("," Designation? Initializer)+ goto 347
}

State 92 {

    ("," Designation? Initializer)+ -> "," . Designation Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> "," . Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression                   -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designation                     -> . DesignatorList "="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator                      -> . "." Str<Identifier>
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator                      -> . "[" ConstantExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+                     -> . Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+                     -> . Designator+ Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DesignatorList                  -> . Designator+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Initializer "," . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "."                      shift and goto 70
    "["                      shift and goto 71
    "{"                      shift and goto 30
    "}"                      shift and goto 351

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 195
    CastExpression           goto 180
    ConditionalExpression    goto 196
    Designation              goto 106
    Designator               goto 248
    Designator+              goto 68
    DesignatorList           goto 249
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    Initializer              goto 350
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 93 {

    ("," AssignmentExpression)+ -> ("," AssignmentExpression)+ "," . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression          -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression          -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression          -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression               -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression        -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression        -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression              -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression              -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression       -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression       -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression          -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression          -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression          -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression       -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression       -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression       -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression       -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression        -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression        -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression         -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression         -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression    -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression    -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression    -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression    -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression        -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression        -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression        -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression        -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression        -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression             -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression             -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression             -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 353
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 94 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> "case" ConstantExpression ":" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 354
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 95 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart . Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart . Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart . ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart . ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    ";"                      shift and goto 109

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 355
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 96 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ";" . Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ";" . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    ")"                      shift and goto 110

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 356
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 97 {

    ("," ParameterDeclaration)+ -> ("," ParameterDeclaration)+ "," . ParameterDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AtomicTypeSpecifier         -> . "_Atomic" "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier        -> . StorageClassSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier        -> . TypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+       -> . DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifier+       -> . DeclarationSpecifier+ DeclarationSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DeclarationSpecifiers       -> . DeclarationSpecifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration        -> . DeclarationSpecifiers
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration        -> . DeclarationSpecifiers AbstractDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterDeclaration        -> . DeclarationSpecifiers Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList           -> ParameterDeclaration ("," ParameterDeclaration)+ "," . "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StorageClassSpecifier       -> . "typedef"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion               -> . "struct"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnion               -> . "union"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier      -> . StructOrUnion "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier      -> . StructOrUnion Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier      -> . StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . AtomicTypeSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . StructOrUnionSpecifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "_Bool"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "_Complex"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "char"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "double"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "float"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "int"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "long"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "short"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "signed"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "unsigned"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . "void"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeSpecifier               -> . TypedefName
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "..."                  shift and goto 358
    "_Atomic"              shift and goto 137
    "_Bool"                shift and goto 138
    "_Complex"             shift and goto 139
    "char"                 shift and goto 141
    "double"               shift and goto 142
    "float"                shift and goto 143
    "int"                  shift and goto 144
    "long"                 shift and goto 145
    "short"                shift and goto 146
    "signed"               shift and goto 147
    "struct"               shift and goto 148
    "typedef"              shift and goto 149
    "union"                shift and goto 150
    "unsigned"             shift and goto 151
    "void"                 shift and goto 152
    TypedefName            shift and goto 153

    AtomicTypeSpecifier    goto 126
    DeclarationSpecifier   goto 128
    DeclarationSpecifier+  goto 1
    DeclarationSpecifiers  goto 37
    ParameterDeclaration   goto 357
    StorageClassSpecifier  goto 132
    StructOrUnion          goto 133
    StructOrUnionSpecifier goto 134
    TypeSpecifier          goto 136
}

State 98 {

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," StructDeclarator)+   -> ("," StructDeclarator)+ "," . StructDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Declarator                -> . Pointer DirectDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . "(" Declarator ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> . ("*" TypeQualifierList?)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclarator          -> . Declarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                       shift and goto 7
    "*"                       shift and goto 8
    Identifier                shift and goto 159

    ("*" TypeQualifierList?)+ goto 155
    Declarator                goto 225
    DirectDeclarator          goto 156
    Pointer                   goto 6
    StructDeclarator          goto 362
}

State 99 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList . "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "]"                      shift and goto 366
    "static"                 shift and goto 114

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 365
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 100 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "static" . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "static" . TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "_Atomic"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "const"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "restrict"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier            -> . "volatile"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifier+           -> . TypeQualifier+ TypeQualifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    TypeQualifierList        -> . TypeQualifier+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "_Atomic"                shift and goto 170
    "const"                  shift and goto 171
    "restrict"               shift and goto 172
    "volatile"               shift and goto 173

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 368
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    TypeQualifier            goto 168
    TypeQualifier+           goto 21
    TypeQualifierList        goto 115
    UnaryExpression          goto 29
}

State 101 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" TypeQualifierList "static" . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 370
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 102 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> "[" "static" TypeQualifierList . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 372
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 103 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> LogicalOrExpression "?" Expression ":" . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    CastExpression           goto 180
    ConditionalExpression    goto 374
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 190
}

State 104 {

    ("," Designation? Initializer)+ -> "," . Designation Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> "," . Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression                   -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designation                     -> . DesignatorList "="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator                      -> . "." Str<Identifier>
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator                      -> . "[" ConstantExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+                     -> . Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+                     -> . Designator+ Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DesignatorList                  -> . Designator+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Designation Initializer "," . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "."                      shift and goto 70
    "["                      shift and goto 71
    "{"                      shift and goto 30
    "}"                      shift and goto 376

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 195
    CastExpression           goto 180
    ConditionalExpression    goto 196
    Designation              goto 106
    Designator               goto 248
    Designator+              goto 68
    DesignatorList           goto 249
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    Initializer              goto 350
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 105 {

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ "," . Designation Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ "," . Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression                   -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designation                     -> . DesignatorList "="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator                      -> . "." Str<Identifier>
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator                      -> . "[" ConstantExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+                     -> . Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+                     -> . Designator+ Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DesignatorList                  -> . Designator+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Initializer ("," Designation? Initializer)+ "," . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "."                      shift and goto 70
    "["                      shift and goto 71
    "{"                      shift and goto 30
    "}"                      shift and goto 378

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 195
    CastExpression           goto 180
    ConditionalExpression    goto 196
    Designation              goto 117
    Designator               goto 248
    Designator+              goto 68
    DesignatorList           goto 249
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    Initializer              goto 377
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 106 {

    ("," Designation? Initializer)+ -> "," Designation . Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression                   -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "{"                      shift and goto 30

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 195
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    Initializer              goto 379
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 107 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "do" Statement "while" "(" . Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 380
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 108 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" Expression ";" . Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" Expression ";" . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    ")"                      shift and goto 118

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 381
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 109 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart ";" . Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart ";" . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    ")"                      shift and goto 120

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 382
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 110 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ";" ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 383
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 111 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> "if" "(" Expression ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 384
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 112 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> "switch" "(" Expression ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 385
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 113 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "while" "(" Expression ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 386
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 114 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList "static" . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 388
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 115 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "static" TypeQualifierList . AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 390
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 116 {

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ "," . Designation Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ "," . Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression                   -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designation                     -> . DesignatorList "="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator                      -> . "." Str<Identifier>
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator                      -> . "[" ConstantExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+                     -> . Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Designator+                     -> . Designator+ Designator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DesignatorList                  -> . Designator+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Designation Initializer ("," Designation? Initializer)+ "," . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "."                      shift and goto 70
    "["                      shift and goto 71
    "{"                      shift and goto 30
    "}"                      shift and goto 393

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 195
    CastExpression           goto 180
    ConditionalExpression    goto 196
    Designation              goto 117
    Designator               goto 248
    Designator+              goto 68
    DesignatorList           goto 249
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    Initializer              goto 377
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 117 {

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ "," Designation . Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression              -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression                   -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression            -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression                  -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression           -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression              -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression           -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression           -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Designation Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer ("," Designation? Initializer)+ "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> . "{" Initializer "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression            -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression             -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression        -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression            -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression                 -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "{"                      shift and goto 30

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 195
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    InclusiveOrExpression    goto 184
    Initializer              goto 394
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 118 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" Expression ";" ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 396
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 119 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart Expression ";" . Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart Expression ";" . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    ")"                      shift and goto 123

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 397
    InclusiveOrExpression    goto 184
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    ShiftExpression          goto 189
    UnaryExpression          goto 29
}

State 120 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart ";" ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 398
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 121 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ";" Expression ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 399
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 122 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" Expression ";" Expression ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 403
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 123 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart Expression ";" ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 404
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 124 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart ";" Expression ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 405
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 125 {

    AdditiveExpression       -> . AdditiveExpression "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . AdditiveExpression "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression       -> . MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AndExpression            -> . EqualityExpression AndExpression "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AssignmentExpression     -> . UnaryExpression AssignmentOperator AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . UnaryExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    CastExpression           -> . "(" TypeName ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression    -> . LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . EqualityExpression "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression       -> . RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExclusiveOrExpression    -> . ExclusiveOrExpression "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression               -> . AssignmentExpression ("," AssignmentExpression)+
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ExpressionStatement      -> . Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression    -> . InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "do" Statement "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> "for" "(" ForInitializerPart Expression ";" Expression ")" . Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "for" "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement       -> . "while" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "break" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "continue" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "goto" Str<Identifier> ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" Expression ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    JumpStatement            -> . "return" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . Str<Identifier> ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "case" ConstantExpression ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LabeledStatement         -> . "default" ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression     -> . LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression      -> . LogicalOrExpression "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> . MultiplicativeExpression "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . RelationalExpression ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression     -> . ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "if" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    SelectionStatement       -> . "switch" "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression          -> . ShiftExpression ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . ExpressionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . IterationStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . JumpStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . LabeledStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Statement                -> . SelectionStatement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Str<Identifier>          -> . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "("                      shift and goto 28
    "break"                  shift and goto 208
    "case"                   shift and goto 33
    "continue"               shift and goto 209
    "default"                shift and goto 210
    "do"                     shift and goto 34
    "for"                    shift and goto 211
    "goto"                   shift and goto 35
    "if"                     shift and goto 212
    "return"                 shift and goto 36
    "switch"                 shift and goto 213
    "while"                  shift and goto 214
    Identifier               shift and goto 216

    AdditiveExpression       goto 178
    AndExpression            goto 179
    AssignmentExpression     goto 31
    CastExpression           goto 180
    ConditionalExpression    goto 196
    EqualityExpression       goto 27
    ExclusiveOrExpression    goto 183
    Expression               goto 200
    ExpressionStatement      goto 201
    InclusiveOrExpression    goto 184
    IterationStatement       goto 202
    JumpStatement            goto 203
    LabeledStatement         goto 204
    LogicalAndExpression     goto 185
    LogicalOrExpression      goto 186
    MultiplicativeExpression goto 187
    RelationalExpression     goto 188
    SelectionStatement       goto 205
    ShiftExpression          goto 189
    Statement                goto 406
    Str<Identifier>          goto 207
    UnaryExpression          goto 29
}

State 126 {

    TypeSpecifier -> AtomicTypeSpecifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> AtomicTypeSpecifier
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 127 {

    ExternalDeclaration -> Declaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ExternalDeclaration -> Declaration
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" TypedefName EOF


}

State 128 {

    DeclarationSpecifier+ -> DeclarationSpecifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DeclarationSpecifier+ -> DeclarationSpecifier
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" Identifier TypedefName


}

State 129 {

    ExternalDeclaration+ -> ExternalDeclaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ExternalDeclaration+ -> ExternalDeclaration
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" TypedefName EOF


}

State 130 {

    ExternalDeclaration -> FunctionDefinition .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ExternalDeclaration -> FunctionDefinition
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" TypedefName EOF


}

State 131 {

    Declaration -> StaticAssertDeclaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Declaration -> StaticAssertDeclaration
        lookahead "(" ";" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "{" "}" Identifier TypedefName EOF


}

State 132 {

    DeclarationSpecifier -> StorageClassSpecifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DeclarationSpecifier -> StorageClassSpecifier
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" Identifier TypedefName


}

State 133 {

    StructOrUnionSpecifier -> StructOrUnion . "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> StructOrUnion . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> StructOrUnion . Identifier "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "{"        shift and goto 9
    Identifier shift and goto 161

}

State 134 {

    TypeSpecifier -> StructOrUnionSpecifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> StructOrUnionSpecifier
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 135 {

    __TranslationUnit -> TranslationUnit .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction __TranslationUnit -> TranslationUnit
        lookahead EOF


}

State 136 {

    DeclarationSpecifier -> TypeSpecifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DeclarationSpecifier -> TypeSpecifier
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" Identifier TypedefName


}

State 137 {

    AtomicTypeSpecifier -> "_Atomic" . "(" TypeName ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "(" shift and goto 10

}

State 138 {

    TypeSpecifier -> "_Bool" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "_Bool"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 139 {

    TypeSpecifier -> "_Complex" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "_Complex"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 140 {

    StaticAssertDeclaration -> "_Static_assert" . "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "(" shift and goto 11

}

State 141 {

    TypeSpecifier -> "char" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "char"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 142 {

    TypeSpecifier -> "double" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "double"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 143 {

    TypeSpecifier -> "float" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "float"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 144 {

    TypeSpecifier -> "int" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "int"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 145 {

    TypeSpecifier -> "long" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "long"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 146 {

    TypeSpecifier -> "short" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "short"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 147 {

    TypeSpecifier -> "signed" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "signed"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 148 {

    StructOrUnion -> "struct" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructOrUnion -> "struct"
        lookahead "{" Identifier


}

State 149 {

    StorageClassSpecifier -> "typedef" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StorageClassSpecifier -> "typedef"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" Identifier TypedefName


}

State 150 {

    StructOrUnion -> "union" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructOrUnion -> "union"
        lookahead "{" Identifier


}

State 151 {

    TypeSpecifier -> "unsigned" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "unsigned"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 152 {

    TypeSpecifier -> "void" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> "void"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 153 {

    TypeSpecifier -> TypedefName .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeSpecifier -> TypedefName
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 154 {

    DeclarationSpecifier+ -> DeclarationSpecifier+ DeclarationSpecifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DeclarationSpecifier+ -> DeclarationSpecifier+ DeclarationSpecifier
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" Identifier TypedefName


}

State 155 {

    ("*" TypeQualifierList?)+ -> ("*" TypeQualifierList?)+ . "*"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("*" TypeQualifierList?)+ -> ("*" TypeQualifierList?)+ . "*" TypeQualifierList
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Pointer                   -> ("*" TypeQualifierList?)+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Pointer -> ("*" TypeQualifierList?)+
        lookahead "(" ")" "," "[" Identifier

    "*" shift and goto 12

}

State 156 {

    Declarator       -> DirectDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Declarator -> DirectDeclarator
        lookahead ")" "," ";" "=" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName

    "(" shift and goto 18
    "[" shift and goto 19

}

State 157 {

    Declaration -> DeclarationSpecifiers InitDeclaratorList . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 165

}

State 158 {

    Declaration -> DeclarationSpecifiers ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Declaration -> DeclarationSpecifiers ";"
        lookahead "(" ";" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "{" "}" Identifier TypedefName EOF


}

State 159 {

    DirectDeclarator -> Identifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> Identifier
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 160 {

    ExternalDeclaration+ -> ExternalDeclaration+ ExternalDeclaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ExternalDeclaration+ -> ExternalDeclaration+ ExternalDeclaration
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" TypedefName EOF


}

State 161 {

    StructOrUnionSpecifier -> StructOrUnion Identifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructOrUnionSpecifier -> StructOrUnion Identifier . "{" StructDeclarationList "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructOrUnionSpecifier -> StructOrUnion Identifier
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName

    "{" shift and goto 25

}

State 162 {

    FunctionDefinition -> DeclarationSpecifiers Declarator CompoundStatement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction FunctionDefinition -> DeclarationSpecifiers Declarator CompoundStatement
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" TypedefName EOF


}

State 163 {

    Declaration+ -> Declaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Declaration+ -> Declaration
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 164 {

    ("," InitDeclarator)+ -> ("," InitDeclarator)+ . "," InitDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclaratorList    -> InitDeclarator ("," InitDeclarator)+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction InitDeclaratorList -> InitDeclarator ("," InitDeclarator)+
        lookahead ";"

    "," shift and goto 42

}

State 165 {

    Declaration -> DeclarationSpecifiers InitDeclaratorList ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Declaration -> DeclarationSpecifiers InitDeclaratorList ";"
        lookahead "(" ";" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "{" "}" Identifier TypedefName EOF


}

State 166 {

    Declarator       -> Pointer DirectDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "(" IdentifierList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" TypeQualifierList "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectDeclarator -> DirectDeclarator . "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Declarator -> Pointer DirectDeclarator
        lookahead ")" "," ";" "=" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName

    "(" shift and goto 18
    "[" shift and goto 19

}

State 167 {

    DirectDeclarator -> "(" Declarator . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 223

}

State 168 {

    TypeQualifier+ -> TypeQualifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeQualifier+ -> TypeQualifier
        lookahead "(" ")" "*" "," "[" "]" "_Atomic" "const" "restrict" "static" "volatile" Identifier


}

State 169 {

    ("*" TypeQualifierList?)+ -> "*" TypeQualifierList .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("*" TypeQualifierList?)+ -> "*" TypeQualifierList
        lookahead "(" ")" "*" "," "[" Identifier


}

State 170 {

    TypeQualifier -> "_Atomic" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeQualifier -> "_Atomic"
        lookahead "(" ")" "*" "," ";" "[" "]" "_Atomic" "const" "restrict" "static" "volatile" Identifier


}

State 171 {

    TypeQualifier -> "const" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeQualifier -> "const"
        lookahead "(" ")" "*" "," ";" "[" "]" "_Atomic" "const" "restrict" "static" "volatile" Identifier


}

State 172 {

    TypeQualifier -> "restrict" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeQualifier -> "restrict"
        lookahead "(" ")" "*" "," ";" "[" "]" "_Atomic" "const" "restrict" "static" "volatile" Identifier


}

State 173 {

    TypeQualifier -> "volatile" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeQualifier -> "volatile"
        lookahead "(" ")" "*" "," ";" "[" "]" "_Atomic" "const" "restrict" "static" "volatile" Identifier


}

State 174 {

    StructDeclaration -> StaticAssertDeclaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructDeclaration -> StaticAssertDeclaration
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "union" "unsigned" "void" "}" TypedefName


}

State 175 {

    StructDeclaration+ -> StructDeclaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructDeclaration+ -> StructDeclaration
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "union" "unsigned" "void" "}" TypedefName


}

State 176 {

    StructOrUnionSpecifier -> StructOrUnion "{" StructDeclarationList . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "}" shift and goto 229

}

State 177 {

    AtomicTypeSpecifier -> "_Atomic" "(" TypeName . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 234

}

State 178 {

    AdditiveExpression -> AdditiveExpression . "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression -> AdditiveExpression . "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression    -> AdditiveExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ShiftExpression -> AdditiveExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"

    "+" shift and goto 47
    "-" shift and goto 48

}

State 179 {

    ExclusiveOrExpression -> AndExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ExclusiveOrExpression -> AndExpression
        lookahead "&&" ")" "," ":" ";" "?" "]" "^" "|" "||" "}"


}

State 180 {

    MultiplicativeExpression -> CastExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction MultiplicativeExpression -> CastExpression
        lookahead "!=" "%" "&" "&&" "(" ")" "*" "+" "," "-" "/" ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"


}

State 181 {

    ConstantExpression -> ConditionalExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ConstantExpression -> ConditionalExpression
        lookahead "," ":" "]"


}

State 182 {

    StaticAssertDeclaration -> "_Static_assert" "(" ConstantExpression . "," Str<StringLiteral> ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "," shift and goto 49

}

State 183 {

    ExclusiveOrExpression -> ExclusiveOrExpression . "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression -> ExclusiveOrExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction InclusiveOrExpression -> ExclusiveOrExpression
        lookahead "&&" ")" "," ":" ";" "?" "]" "|" "||" "}"

    "^" shift and goto 52

}

State 184 {

    InclusiveOrExpression -> InclusiveOrExpression . "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression  -> InclusiveOrExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction LogicalAndExpression -> InclusiveOrExpression
        lookahead "&&" ")" "," ":" ";" "?" "]" "||" "}"

    "|" shift and goto 53

}

State 185 {

    LogicalAndExpression -> LogicalAndExpression . "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression  -> LogicalAndExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction LogicalOrExpression -> LogicalAndExpression
        lookahead ")" "," ":" ";" "?" "]" "||" "}"

    "&&" shift and goto 54

}

State 186 {

    ConditionalExpression -> LogicalOrExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ConditionalExpression -> LogicalOrExpression . "?" Expression ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression   -> LogicalOrExpression . "||" LogicalAndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ConditionalExpression -> LogicalOrExpression
        lookahead ")" "," ":" ";" "]" "}"

    "?" shift and goto 55
    "||" shift and goto 56

}

State 187 {

    AdditiveExpression       -> MultiplicativeExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression . "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression . "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression . "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AdditiveExpression -> MultiplicativeExpression
        lookahead "!=" "&" "&&" "(" ")" "+" "," "-" ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"

    "%" shift and goto 57
    "*" shift and goto 58
    "/" shift and goto 59

}

State 188 {

    EqualityExpression   -> RelationalExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction EqualityExpression -> RelationalExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "==" "?" "]" "^" "|" "||" "}"

    "<" shift and goto 60
    "<=" shift and goto 61
    ">" shift and goto 62
    ">=" shift and goto 63

}

State 189 {

    RelationalExpression -> ShiftExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression      -> ShiftExpression . "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression      -> ShiftExpression . ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction RelationalExpression -> ShiftExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "<" "<=" "==" ">" ">=" "?" "]" "^" "|" "||" "}"

    "<<" shift and goto 64
    ">>" shift and goto 65

}

State 190 {

    CastExpression -> UnaryExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction CastExpression -> UnaryExpression
        lookahead "!=" "%" "&" "&&" "(" ")" "*" "+" "," "-" "/" ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"


}

State 191 {

    ("*" TypeQualifierList?)+ -> ("*" TypeQualifierList?)+ "*" TypeQualifierList .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("*" TypeQualifierList?)+ -> ("*" TypeQualifierList?)+ "*" TypeQualifierList
        lookahead "(" ")" "*" "," "[" Identifier


}

State 192 {

    Declaration+ -> Declaration+ Declaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Declaration+ -> Declaration+ Declaration
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 193 {

    FunctionDefinition -> DeclarationSpecifiers Declarator DeclarationList CompoundStatement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction FunctionDefinition -> DeclarationSpecifiers Declarator DeclarationList CompoundStatement
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" TypedefName EOF


}

State 194 {

    InitDeclarator -> Declarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InitDeclarator -> Declarator . "=" Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction InitDeclarator -> Declarator
        lookahead "," ";"

    "=" shift and goto 16

}

State 195 {

    Initializer -> AssignmentExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Initializer -> AssignmentExpression
        lookahead "," ";" "}"


}

State 196 {

    AssignmentExpression -> ConditionalExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentExpression -> ConditionalExpression
        lookahead ")" "," ":" ";" "]" "}"


}

State 197 {

    InitDeclarator -> Declarator "=" Initializer .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction InitDeclarator -> Declarator "=" Initializer
        lookahead "," ";"


}

State 198 {

    BlockItem+ -> BlockItem .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction BlockItem+ -> BlockItem
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 199 {

    BlockItem -> Declaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction BlockItem -> Declaration
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 200 {

    ExpressionStatement -> Expression . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 253

}

State 201 {

    Statement -> ExpressionStatement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Statement -> ExpressionStatement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 202 {

    Statement -> IterationStatement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Statement -> IterationStatement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 203 {

    Statement -> JumpStatement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Statement -> JumpStatement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 204 {

    Statement -> LabeledStatement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Statement -> LabeledStatement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 205 {

    Statement -> SelectionStatement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Statement -> SelectionStatement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 206 {

    BlockItem -> Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction BlockItem -> Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 207 {

    LabeledStatement -> Str<Identifier> . ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ":" shift and goto 73

}

State 208 {

    JumpStatement -> "break" . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 254

}

State 209 {

    JumpStatement -> "continue" . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 256

}

State 210 {

    LabeledStatement -> "default" . ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ":" shift and goto 74

}

State 211 {

    IterationStatement -> "for" . "(" Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement -> "for" . "(" Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement -> "for" . "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement -> "for" . "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement -> "for" . "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement -> "for" . "(" ForInitializerPart ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement -> "for" . "(" ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement -> "for" . "(" ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "(" shift and goto 75

}

State 212 {

    SelectionStatement -> "if" . "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "(" shift and goto 76

}

State 213 {

    SelectionStatement -> "switch" . "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "(" shift and goto 77

}

State 214 {

    IterationStatement -> "while" . "(" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "(" shift and goto 78

}

State 215 {

    CompoundStatement -> "{" "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction CompoundStatement -> "{" "}"
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" TypedefName EOF


}

State 216 {

    Str<Identifier> -> Identifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Str<Identifier> -> Identifier
        lookahead "." ":" ";" "=" "["


}

State 217 {

    DirectDeclarator -> DirectDeclarator "(" IdentifierList . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 263

}

State 218 {

    DirectDeclarator -> DirectDeclarator "(" ParameterTypeList . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 265

}

State 219 {

    DirectDeclarator -> DirectDeclarator "(" ")" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "(" ")"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 220 {

    DirectDeclarator -> DirectDeclarator "[" AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 268

}

State 221 {

    DirectDeclarator -> DirectDeclarator "[" "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "[" "]"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 222 {

    ("," InitDeclarator)+ -> "," InitDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," InitDeclarator)+ -> "," InitDeclarator
        lookahead "," ";"


}

State 223 {

    DirectDeclarator -> "(" Declarator ")" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> "(" Declarator ")"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 224 {

    TypeQualifier+ -> TypeQualifier+ TypeQualifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeQualifier+ -> TypeQualifier+ TypeQualifier
        lookahead "(" ")" "*" "," "[" "]" "_Atomic" "const" "restrict" "static" "volatile" Identifier


}

State 225 {

    StructDeclarator -> Declarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructDeclarator -> Declarator
        lookahead "," ";"


}

State 226 {

    StructDeclaration -> SpecifierQualifierList StructDeclaratorList . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 275

}

State 227 {

    StructDeclaration -> SpecifierQualifierList ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructDeclaration -> SpecifierQualifierList ";"
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "union" "unsigned" "void" "}" TypedefName


}

State 228 {

    StructDeclaration+ -> StructDeclaration+ StructDeclaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructDeclaration+ -> StructDeclaration+ StructDeclaration
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "union" "unsigned" "void" "}" TypedefName


}

State 229 {

    StructOrUnionSpecifier -> StructOrUnion "{" StructDeclarationList "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructOrUnionSpecifier -> StructOrUnion "{" StructDeclarationList "}"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 230 {

    SpecifierQualifierList -> TypeSpecifier TypeQualifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction SpecifierQualifierList -> TypeSpecifier TypeQualifier
        lookahead "(" ")" "*" ";" "[" Identifier


}

State 231 {

    StructOrUnionSpecifier -> StructOrUnion Identifier "{" StructDeclarationList . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "}" shift and goto 276

}

State 232 {

    TypeName -> SpecifierQualifierList AbstractDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction TypeName -> SpecifierQualifierList AbstractDeclarator
        lookahead ")"


}

State 233 {

    AbstractDeclarator       -> DirectAbstractDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AbstractDeclarator -> DirectAbstractDeclarator
        lookahead ")" ","

    "(" shift and goto 85
    "[" shift and goto 86

}

State 234 {

    AtomicTypeSpecifier -> "_Atomic" "(" TypeName ")" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AtomicTypeSpecifier -> "_Atomic" "(" TypeName ")"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 235 {

    AndExpression -> EqualityExpression AndExpression . "&" EqualityExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "&" shift and goto 89

}

State 236 {

    CastExpression -> "(" TypeName . ")" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 90

}

State 237 {

    AssignmentOperator -> "%=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> "%="
        lookahead "("


}

State 238 {

    AssignmentOperator -> "&=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> "&="
        lookahead "("


}

State 239 {

    AssignmentOperator -> "*=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> "*="
        lookahead "("


}

State 240 {

    AssignmentOperator -> "+=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> "+="
        lookahead "("


}

State 241 {

    AssignmentOperator -> "-=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> "-="
        lookahead "("


}

State 242 {

    AssignmentOperator -> "/=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> "/="
        lookahead "("


}

State 243 {

    AssignmentOperator -> "<<=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> "<<="
        lookahead "("


}

State 244 {

    AssignmentOperator -> "=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> "="
        lookahead "("


}

State 245 {

    AssignmentOperator -> ">>=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> ">>="
        lookahead "("


}

State 246 {

    AssignmentOperator -> "^=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> "^="
        lookahead "("


}

State 247 {

    AssignmentOperator -> "|=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentOperator -> "|="
        lookahead "("


}

State 248 {

    Designator+ -> Designator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Designator+ -> Designator
        lookahead "." "=" "["


}

State 249 {

    Designation -> DesignatorList . "="
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "=" shift and goto 306

}

State 250 {

    ("," AssignmentExpression)+ -> ("," AssignmentExpression)+ . "," AssignmentExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Expression                  -> AssignmentExpression ("," AssignmentExpression)+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Expression -> AssignmentExpression ("," AssignmentExpression)+
        lookahead ")" ":" ";"

    "," shift and goto 93

}

State 251 {

    BlockItem+ -> BlockItem+ BlockItem .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction BlockItem+ -> BlockItem+ BlockItem
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 252 {

    CompoundStatement -> "{" BlockItem+ "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction CompoundStatement -> "{" BlockItem+ "}"
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" TypedefName EOF


}

State 253 {

    ExpressionStatement -> Expression ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ExpressionStatement -> Expression ";"
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 254 {

    JumpStatement -> "break" ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction JumpStatement -> "break" ";"
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 255 {

    LabeledStatement -> "case" ConstantExpression . ":" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ":" shift and goto 94

}

State 256 {

    JumpStatement -> "continue" ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction JumpStatement -> "continue" ";"
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 257 {

    IterationStatement -> "do" Statement . "while" "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "while" shift and goto 314

}

State 258 {

    JumpStatement -> "goto" Str<Identifier> . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 317

}

State 259 {

    JumpStatement -> "return" Expression . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 319

}

State 260 {

    JumpStatement -> "return" ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction JumpStatement -> "return" ";"
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 261 {

    ParameterDeclaration -> DeclarationSpecifiers AbstractDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ParameterDeclaration -> DeclarationSpecifiers AbstractDeclarator
        lookahead ")" ","


}

State 262 {

    ParameterDeclaration -> DeclarationSpecifiers Declarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ParameterDeclaration -> DeclarationSpecifiers Declarator
        lookahead ")" ","


}

State 263 {

    DirectDeclarator -> DirectDeclarator "(" IdentifierList ")" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "(" IdentifierList ")"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 264 {

    ("," ParameterDeclaration)+ -> ("," ParameterDeclaration)+ . "," ParameterDeclaration
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList           -> ParameterDeclaration ("," ParameterDeclaration)+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ParameterTypeList           -> ParameterDeclaration ("," ParameterDeclaration)+ . "," "..."
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ParameterTypeList -> ParameterDeclaration ("," ParameterDeclaration)+
        lookahead ")"

    "," shift and goto 97

}

State 265 {

    DirectDeclarator -> DirectDeclarator "(" ParameterTypeList ")" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "(" ParameterTypeList ")"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 266 {

    ("," Identifier)+ -> ("," Identifier)+ . "," Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IdentifierList    -> Identifier ("," Identifier)+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IdentifierList -> Identifier ("," Identifier)+
        lookahead ")"

    "," shift and goto 324

}

State 267 {

    ("," Identifier)+ -> "," . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Identifier shift and goto 325

}

State 268 {

    DirectDeclarator -> DirectDeclarator "[" AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "[" AssignmentExpression "]"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 269 {

    DirectDeclarator -> DirectDeclarator "[" TypeQualifierList AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 326

}

State 270 {

    DirectDeclarator -> DirectDeclarator "[" TypeQualifierList "*" . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 327

}

State 271 {

    DirectDeclarator -> DirectDeclarator "[" TypeQualifierList "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "[" TypeQualifierList "]"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 272 {

    DirectDeclarator -> DirectDeclarator "[" "static" AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 329

}

State 273 {

    ("," InitDeclarator)+ -> ("," InitDeclarator)+ "," InitDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," InitDeclarator)+ -> ("," InitDeclarator)+ "," InitDeclarator
        lookahead "," ";"


}

State 274 {

    ("," StructDeclarator)+ -> ("," StructDeclarator)+ . "," StructDeclarator
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    StructDeclaratorList    -> StructDeclarator ("," StructDeclarator)+ .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructDeclaratorList -> StructDeclarator ("," StructDeclarator)+
        lookahead ";"

    "," shift and goto 98

}

State 275 {

    StructDeclaration -> SpecifierQualifierList StructDeclaratorList ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructDeclaration -> SpecifierQualifierList StructDeclaratorList ";"
        lookahead "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "union" "unsigned" "void" "}" TypedefName


}

State 276 {

    StructOrUnionSpecifier -> StructOrUnion Identifier "{" StructDeclarationList "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StructOrUnionSpecifier -> StructOrUnion Identifier "{" StructDeclarationList "}"
        lookahead "(" ")" "*" "," ";" "[" "_Atomic" "_Bool" "_Complex" "char" "const" "double" "float" "int" "long" "restrict" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "volatile" Identifier TypedefName


}

State 277 {

    AbstractDeclarator       -> Pointer DirectAbstractDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "(" ParameterTypeList ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "(" ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" TypeQualifierList "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" "*" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" "static" AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    DirectAbstractDeclarator -> DirectAbstractDeclarator . "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AbstractDeclarator -> Pointer DirectAbstractDeclarator
        lookahead ")" ","

    "(" shift and goto 85
    "[" shift and goto 86

}

State 278 {

    DirectAbstractDeclarator -> "(" AbstractDeclarator . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 337

}

State 279 {

    DirectAbstractDeclarator -> "(" ParameterTypeList . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 338

}

State 280 {

    DirectAbstractDeclarator -> "(" ")" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "(" ")"
        lookahead "(" ")" "," "["


}

State 281 {

    DirectAbstractDeclarator -> "[" AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 339

}

State 282 {

    DirectAbstractDeclarator -> "[" "*" . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 342

}

State 283 {

    DirectAbstractDeclarator -> "[" "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "[" "]"
        lookahead "(" ")" "," "["


}

State 284 {

    AdditiveExpression       -> AdditiveExpression "+" MultiplicativeExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression . "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression . "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression . "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AdditiveExpression -> AdditiveExpression "+" MultiplicativeExpression
        lookahead "!=" "&" "&&" "(" ")" "+" "," "-" ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"

    "%" shift and goto 57
    "*" shift and goto 58
    "/" shift and goto 59

}

State 285 {

    AdditiveExpression       -> AdditiveExpression "-" MultiplicativeExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression . "%" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression . "*" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    MultiplicativeExpression -> MultiplicativeExpression . "/" CastExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AdditiveExpression -> AdditiveExpression "-" MultiplicativeExpression
        lookahead "!=" "&" "&&" "(" ")" "+" "," "-" ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"

    "%" shift and goto 57
    "*" shift and goto 58
    "/" shift and goto 59

}

State 286 {

    StaticAssertDeclaration -> "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> . ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 344

}

State 287 {

    Str<StringLiteral> -> StringLiteral .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Str<StringLiteral> -> StringLiteral
        lookahead ")"


}

State 288 {

    EqualityExpression   -> EqualityExpression "!=" RelationalExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction EqualityExpression -> EqualityExpression "!=" RelationalExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "==" "?" "]" "^" "|" "||" "}"

    "<" shift and goto 60
    "<=" shift and goto 61
    ">" shift and goto 62
    ">=" shift and goto 63

}

State 289 {

    EqualityExpression   -> EqualityExpression "==" RelationalExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . "<" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . "<=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . ">" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    RelationalExpression -> RelationalExpression . ">=" ShiftExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction EqualityExpression -> EqualityExpression "==" RelationalExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "==" "?" "]" "^" "|" "||" "}"

    "<" shift and goto 60
    "<=" shift and goto 61
    ">" shift and goto 62
    ">=" shift and goto 63

}

State 290 {

    ExclusiveOrExpression -> ExclusiveOrExpression "^" AndExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ExclusiveOrExpression -> ExclusiveOrExpression "^" AndExpression
        lookahead "&&" ")" "," ":" ";" "?" "]" "^" "|" "||" "}"


}

State 291 {

    ExclusiveOrExpression -> ExclusiveOrExpression . "^" AndExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    InclusiveOrExpression -> InclusiveOrExpression "|" ExclusiveOrExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction InclusiveOrExpression -> InclusiveOrExpression "|" ExclusiveOrExpression
        lookahead "&&" ")" "," ":" ";" "?" "]" "|" "||" "}"

    "^" shift and goto 52

}

State 292 {

    InclusiveOrExpression -> InclusiveOrExpression . "|" ExclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalAndExpression  -> LogicalAndExpression "&&" InclusiveOrExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction LogicalAndExpression -> LogicalAndExpression "&&" InclusiveOrExpression
        lookahead "&&" ")" "," ":" ";" "?" "]" "||" "}"

    "|" shift and goto 53

}

State 293 {

    ConditionalExpression -> LogicalOrExpression "?" Expression . ":" ConditionalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ":" shift and goto 103

}

State 294 {

    LogicalAndExpression -> LogicalAndExpression . "&&" InclusiveOrExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    LogicalOrExpression  -> LogicalOrExpression "||" LogicalAndExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction LogicalOrExpression -> LogicalOrExpression "||" LogicalAndExpression
        lookahead ")" "," ":" ";" "?" "]" "||" "}"

    "&&" shift and goto 54

}

State 295 {

    MultiplicativeExpression -> MultiplicativeExpression "%" CastExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction MultiplicativeExpression -> MultiplicativeExpression "%" CastExpression
        lookahead "!=" "%" "&" "&&" "(" ")" "*" "+" "," "-" "/" ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"


}

State 296 {

    MultiplicativeExpression -> MultiplicativeExpression "*" CastExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction MultiplicativeExpression -> MultiplicativeExpression "*" CastExpression
        lookahead "!=" "%" "&" "&&" "(" ")" "*" "+" "," "-" "/" ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"


}

State 297 {

    MultiplicativeExpression -> MultiplicativeExpression "/" CastExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction MultiplicativeExpression -> MultiplicativeExpression "/" CastExpression
        lookahead "!=" "%" "&" "&&" "(" ")" "*" "+" "," "-" "/" ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"


}

State 298 {

    RelationalExpression -> RelationalExpression "<" ShiftExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression      -> ShiftExpression . "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression      -> ShiftExpression . ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction RelationalExpression -> RelationalExpression "<" ShiftExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "<" "<=" "==" ">" ">=" "?" "]" "^" "|" "||" "}"

    "<<" shift and goto 64
    ">>" shift and goto 65

}

State 299 {

    RelationalExpression -> RelationalExpression "<=" ShiftExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression      -> ShiftExpression . "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression      -> ShiftExpression . ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction RelationalExpression -> RelationalExpression "<=" ShiftExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "<" "<=" "==" ">" ">=" "?" "]" "^" "|" "||" "}"

    "<<" shift and goto 64
    ">>" shift and goto 65

}

State 300 {

    RelationalExpression -> RelationalExpression ">" ShiftExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression      -> ShiftExpression . "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression      -> ShiftExpression . ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction RelationalExpression -> RelationalExpression ">" ShiftExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "<" "<=" "==" ">" ">=" "?" "]" "^" "|" "||" "}"

    "<<" shift and goto 64
    ">>" shift and goto 65

}

State 301 {

    RelationalExpression -> RelationalExpression ">=" ShiftExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression      -> ShiftExpression . "<<" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression      -> ShiftExpression . ">>" AdditiveExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction RelationalExpression -> RelationalExpression ">=" ShiftExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "<" "<=" "==" ">" ">=" "?" "]" "^" "|" "||" "}"

    "<<" shift and goto 64
    ">>" shift and goto 65

}

State 302 {

    AdditiveExpression -> AdditiveExpression . "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression -> AdditiveExpression . "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression    -> ShiftExpression "<<" AdditiveExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ShiftExpression -> ShiftExpression "<<" AdditiveExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"

    "+" shift and goto 47
    "-" shift and goto 48

}

State 303 {

    AdditiveExpression -> AdditiveExpression . "+" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    AdditiveExpression -> AdditiveExpression . "-" MultiplicativeExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ShiftExpression    -> ShiftExpression ">>" AdditiveExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ShiftExpression -> ShiftExpression ">>" AdditiveExpression
        lookahead "!=" "&" "&&" "(" ")" "," ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"

    "+" shift and goto 47
    "-" shift and goto 48

}

State 304 {

    AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AssignmentExpression -> UnaryExpression AssignmentOperator AssignmentExpression
        lookahead ")" "," ":" ";" "]" "}"


}

State 305 {

    Designator+ -> Designator+ Designator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Designator+ -> Designator+ Designator
        lookahead "." "=" "["


}

State 306 {

    Designation -> DesignatorList "=" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Designation -> DesignatorList "="
        lookahead "(" "{"


}

State 307 {

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ . "," Designation Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ . "," Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Initializer ("," Designation? Initializer)+ . "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Initializer ("," Designation? Initializer)+ . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "," shift and goto 105
    "}" shift and goto 349

}

State 308 {

    Initializer -> "{" Initializer "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Initializer -> "{" Initializer "}"
        lookahead "," ";" "}"


}

State 309 {

    Designator -> "." Str<Identifier> .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Designator -> "." Str<Identifier>
        lookahead "." "=" "["


}

State 310 {

    Designator -> "[" ConstantExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 352

}

State 311 {

    ("," AssignmentExpression)+ -> "," AssignmentExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," AssignmentExpression)+ -> "," AssignmentExpression
        lookahead ")" "," ":" ";"


}

State 312 {

    LabeledStatement -> Str<Identifier> ":" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction LabeledStatement -> Str<Identifier> ":" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 313 {

    LabeledStatement -> "default" ":" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction LabeledStatement -> "default" ":" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 314 {

    IterationStatement -> "do" Statement "while" . "(" Expression ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "(" shift and goto 107

}

State 315 {

    ForInitializerPart -> Declaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ForInitializerPart -> Declaration
        lookahead "(" ";"


}

State 316 {

    IterationStatement -> "for" "(" Expression . ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement -> "for" "(" Expression . ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 108

}

State 317 {

    JumpStatement -> "goto" Str<Identifier> ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction JumpStatement -> "goto" Str<Identifier> ";"
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 318 {

    SelectionStatement -> "if" "(" Expression . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 111

}

State 319 {

    JumpStatement -> "return" Expression ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction JumpStatement -> "return" Expression ";"
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 320 {

    SelectionStatement -> "switch" "(" Expression . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 112

}

State 321 {

    IterationStatement -> "while" "(" Expression . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 113

}

State 322 {

    ("," ParameterDeclaration)+ -> "," ParameterDeclaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," ParameterDeclaration)+ -> "," ParameterDeclaration
        lookahead ")" ","


}

State 323 {

    ParameterTypeList -> ParameterDeclaration "," "..." .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ParameterTypeList -> ParameterDeclaration "," "..."
        lookahead ")"


}

State 324 {

    ("," Identifier)+ -> ("," Identifier)+ "," . Identifier
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Identifier shift and goto 359

}

State 325 {

    ("," Identifier)+ -> "," Identifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," Identifier)+ -> "," Identifier
        lookahead ")" ","


}

State 326 {

    DirectDeclarator -> DirectDeclarator "[" TypeQualifierList AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 327 {

    DirectDeclarator -> DirectDeclarator "[" TypeQualifierList "*" "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "[" TypeQualifierList "*" "]"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 328 {

    DirectDeclarator -> DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 360

}

State 329 {

    DirectDeclarator -> DirectDeclarator "[" "static" AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "[" "static" AssignmentExpression "]"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 330 {

    DirectDeclarator -> DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 361

}

State 331 {

    ("," StructDeclarator)+ -> "," StructDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," StructDeclarator)+ -> "," StructDeclarator
        lookahead "," ";"


}

State 332 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "(" ParameterTypeList . ")"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 363

}

State 333 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "(" ")" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> DirectAbstractDeclarator "(" ")"
        lookahead "(" ")" "," "["


}

State 334 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 364

}

State 335 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "*" . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 367

}

State 336 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "]"
        lookahead "(" ")" "," "["


}

State 337 {

    DirectAbstractDeclarator -> "(" AbstractDeclarator ")" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "(" AbstractDeclarator ")"
        lookahead "(" ")" "," "["


}

State 338 {

    DirectAbstractDeclarator -> "(" ParameterTypeList ")" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "(" ParameterTypeList ")"
        lookahead "(" ")" "," "["


}

State 339 {

    DirectAbstractDeclarator -> "[" AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "[" AssignmentExpression "]"
        lookahead "(" ")" "," "["


}

State 340 {

    DirectAbstractDeclarator -> "[" TypeQualifierList AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 369

}

State 341 {

    DirectAbstractDeclarator -> "[" TypeQualifierList "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "[" TypeQualifierList "]"
        lookahead "(" ")" "," "["


}

State 342 {

    DirectAbstractDeclarator -> "[" "*" "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "[" "*" "]"
        lookahead "(" ")" "," "["


}

State 343 {

    DirectAbstractDeclarator -> "[" "static" AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 371

}

State 344 {

    StaticAssertDeclaration -> "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 373

}

State 345 {

    AndExpression      -> EqualityExpression AndExpression "&" EqualityExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression -> EqualityExpression . "!=" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    EqualityExpression -> EqualityExpression . "==" RelationalExpression
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction AndExpression -> EqualityExpression AndExpression "&" EqualityExpression
        lookahead "&" "&&" ")" "," ":" ";" "?" "]" "^" "|" "||" "}"

    "!=" shift and goto 50
    "==" shift and goto 51

}

State 346 {

    CastExpression -> "(" TypeName ")" CastExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction CastExpression -> "(" TypeName ")" CastExpression
        lookahead "!=" "%" "&" "&&" "(" ")" "*" "+" "," "-" "/" ":" ";" "<" "<<" "<=" "==" ">" ">=" ">>" "?" "]" "^" "|" "||" "}"


}

State 347 {

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ . "," Designation Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ . "," Initializer
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Designation Initializer ("," Designation? Initializer)+ . "," "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    Initializer                     -> "{" Designation Initializer ("," Designation? Initializer)+ . "}"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "," shift and goto 116
    "}" shift and goto 375

}

State 348 {

    Initializer -> "{" Designation Initializer "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Initializer -> "{" Designation Initializer "}"
        lookahead "," ";" "}"


}

State 349 {

    Initializer -> "{" Initializer ("," Designation? Initializer)+ "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Initializer -> "{" Initializer ("," Designation? Initializer)+ "}"
        lookahead "," ";" "}"


}

State 350 {

    ("," Designation? Initializer)+ -> "," Initializer .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," Designation? Initializer)+ -> "," Initializer
        lookahead "," "}"


}

State 351 {

    Initializer -> "{" Initializer "," "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Initializer -> "{" Initializer "," "}"
        lookahead "," ";" "}"


}

State 352 {

    Designator -> "[" ConstantExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Designator -> "[" ConstantExpression "]"
        lookahead "." "=" "["


}

State 353 {

    ("," AssignmentExpression)+ -> ("," AssignmentExpression)+ "," AssignmentExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," AssignmentExpression)+ -> ("," AssignmentExpression)+ "," AssignmentExpression
        lookahead ")" "," ":" ";"


}

State 354 {

    LabeledStatement -> "case" ConstantExpression ":" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction LabeledStatement -> "case" ConstantExpression ":" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 355 {

    IterationStatement -> "for" "(" ForInitializerPart Expression . ";" Expression ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    IterationStatement -> "for" "(" ForInitializerPart Expression . ";" ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 119

}

State 356 {

    IterationStatement -> "for" "(" ";" Expression . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 121

}

State 357 {

    ("," ParameterDeclaration)+ -> ("," ParameterDeclaration)+ "," ParameterDeclaration .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," ParameterDeclaration)+ -> ("," ParameterDeclaration)+ "," ParameterDeclaration
        lookahead ")" ","


}

State 358 {

    ParameterTypeList -> ParameterDeclaration ("," ParameterDeclaration)+ "," "..." .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ParameterTypeList -> ParameterDeclaration ("," ParameterDeclaration)+ "," "..."
        lookahead ")"


}

State 359 {

    ("," Identifier)+ -> ("," Identifier)+ "," Identifier .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," Identifier)+ -> ("," Identifier)+ "," Identifier
        lookahead ")" ","


}

State 360 {

    DirectDeclarator -> DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 361 {

    DirectDeclarator -> DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectDeclarator -> DirectDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "(" ")" "," ";" "=" "[" "_Atomic" "_Bool" "_Complex" "_Static_assert" "char" "double" "float" "int" "long" "short" "signed" "struct" "typedef" "union" "unsigned" "void" "{" TypedefName


}

State 362 {

    ("," StructDeclarator)+ -> ("," StructDeclarator)+ "," StructDeclarator .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," StructDeclarator)+ -> ("," StructDeclarator)+ "," StructDeclarator
        lookahead "," ";"


}

State 363 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "(" ParameterTypeList ")" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> DirectAbstractDeclarator "(" ParameterTypeList ")"
        lookahead "(" ")" "," "["


}

State 364 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> DirectAbstractDeclarator "[" AssignmentExpression "]"
        lookahead "(" ")" "," "["


}

State 365 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 387

}

State 366 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList "]"
        lookahead "(" ")" "," "["


}

State 367 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "*" "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "*" "]"
        lookahead "(" ")" "," "["


}

State 368 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "static" AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 389

}

State 369 {

    DirectAbstractDeclarator -> "[" TypeQualifierList AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "[" TypeQualifierList AssignmentExpression "]"
        lookahead "(" ")" "," "["


}

State 370 {

    DirectAbstractDeclarator -> "[" TypeQualifierList "static" AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 391

}

State 371 {

    DirectAbstractDeclarator -> "[" "static" AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "[" "static" AssignmentExpression "]"
        lookahead "(" ")" "," "["


}

State 372 {

    DirectAbstractDeclarator -> "[" "static" TypeQualifierList AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 392

}

State 373 {

    StaticAssertDeclaration -> "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction StaticAssertDeclaration -> "_Static_assert" "(" ConstantExpression "," Str<StringLiteral> ")" ";"
        lookahead "(" ";" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "{" "}" Identifier TypedefName EOF


}

State 374 {

    ConditionalExpression -> LogicalOrExpression "?" Expression ":" ConditionalExpression .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ConditionalExpression -> LogicalOrExpression "?" Expression ":" ConditionalExpression
        lookahead ")" "," ":" ";" "]" "}"


}

State 375 {

    Initializer -> "{" Designation Initializer ("," Designation? Initializer)+ "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Initializer -> "{" Designation Initializer ("," Designation? Initializer)+ "}"
        lookahead "," ";" "}"


}

State 376 {

    Initializer -> "{" Designation Initializer "," "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Initializer -> "{" Designation Initializer "," "}"
        lookahead "," ";" "}"


}

State 377 {

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ "," Initializer .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ "," Initializer
        lookahead "," "}"


}

State 378 {

    Initializer -> "{" Initializer ("," Designation? Initializer)+ "," "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Initializer -> "{" Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "," ";" "}"


}

State 379 {

    ("," Designation? Initializer)+ -> "," Designation Initializer .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," Designation? Initializer)+ -> "," Designation Initializer
        lookahead "," "}"


}

State 380 {

    IterationStatement -> "do" Statement "while" "(" Expression . ")" ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 395

}

State 381 {

    IterationStatement -> "for" "(" Expression ";" Expression . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 122

}

State 382 {

    IterationStatement -> "for" "(" ForInitializerPart ";" Expression . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 124

}

State 383 {

    IterationStatement -> "for" "(" ";" ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IterationStatement -> "for" "(" ";" ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 384 {

    SelectionStatement -> "if" "(" Expression ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction SelectionStatement -> "if" "(" Expression ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 385 {

    SelectionStatement -> "switch" "(" Expression ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction SelectionStatement -> "switch" "(" Expression ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 386 {

    IterationStatement -> "while" "(" Expression ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IterationStatement -> "while" "(" Expression ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 387 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList AssignmentExpression "]"
        lookahead "(" ")" "," "["


}

State 388 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList "static" AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 400

}

State 389 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "static" AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "static" AssignmentExpression "]"
        lookahead "(" ")" "," "["


}

State 390 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "static" TypeQualifierList AssignmentExpression . "]"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    "]" shift and goto 401

}

State 391 {

    DirectAbstractDeclarator -> "[" TypeQualifierList "static" AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "(" ")" "," "["


}

State 392 {

    DirectAbstractDeclarator -> "[" "static" TypeQualifierList AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "(" ")" "," "["


}

State 393 {

    Initializer -> "{" Designation Initializer ("," Designation? Initializer)+ "," "}" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction Initializer -> "{" Designation Initializer ("," Designation? Initializer)+ "," "}"
        lookahead "," ";" "}"


}

State 394 {

    ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ "," Designation Initializer .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction ("," Designation? Initializer)+ -> ("," Designation? Initializer)+ "," Designation Initializer
        lookahead "," "}"


}

State 395 {

    IterationStatement -> "do" Statement "while" "(" Expression ")" . ";"
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ";" shift and goto 402

}

State 396 {

    IterationStatement -> "for" "(" Expression ";" ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IterationStatement -> "for" "(" Expression ";" ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 397 {

    IterationStatement -> "for" "(" ForInitializerPart Expression ";" Expression . ")" Statement
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF

    ")" shift and goto 125

}

State 398 {

    IterationStatement -> "for" "(" ForInitializerPart ";" ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IterationStatement -> "for" "(" ForInitializerPart ";" ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 399 {

    IterationStatement -> "for" "(" ";" Expression ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IterationStatement -> "for" "(" ";" Expression ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 400 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList "static" AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> DirectAbstractDeclarator "[" TypeQualifierList "static" AssignmentExpression "]"
        lookahead "(" ")" "," "["


}

State 401 {

    DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "static" TypeQualifierList AssignmentExpression "]" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction DirectAbstractDeclarator -> DirectAbstractDeclarator "[" "static" TypeQualifierList AssignmentExpression "]"
        lookahead "(" ")" "," "["


}

State 402 {

    IterationStatement -> "do" Statement "while" "(" Expression ")" ";" .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IterationStatement -> "do" Statement "while" "(" Expression ")" ";"
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 403 {

    IterationStatement -> "for" "(" Expression ";" Expression ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IterationStatement -> "for" "(" Expression ";" Expression ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 404 {

    IterationStatement -> "for" "(" ForInitializerPart Expression ";" ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IterationStatement -> "for" "(" ForInitializerPart Expression ";" ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 405 {

    IterationStatement -> "for" "(" ForInitializerPart ";" Expression ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IterationStatement -> "for" "(" ForInitializerPart ";" Expression ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}

State 406 {

    IterationStatement -> "for" "(" ForInitializerPart Expression ";" Expression ")" Statement .
        lookahead "!" "!=" "%" "%=" "&" "&&" "&=" "(" ")" "*" "*=" "+" "++" "+=" "," "-" "--" "-=" "->" "." "..." "/" "/=" ":" ";" "<" "<<" "<<=" "<=" "=" "==" ">" ">=" ">>" ">>=" "?" "[" "]" "^" "^=" "_Alignas" "_Alignof" "_Atomic" "_Bool" "_Complex" "_Generic" "_Imaginary" "_Noreturn" "_Static_assert" "_Thread_local" "auto" "break" "case" "char" "const" "continue" "default" "do" "double" "else" "enum" "extern" "float" "for" "goto" "if" "inline" "int" "long" "register" "restrict" "return" "short" "signed" "sizeof" "static" "struct" "switch" "typedef" "union" "unsigned" "void" "volatile" "while" "{" "|" "|=" "||" "}" "~" Constant Identifier StringLiteral TypedefName EOF


    reduction IterationStatement -> "for" "(" ForInitializerPart Expression ";" Expression ")" Statement
        lookahead "(" "_Atomic" "_Bool" "_Complex" "_Static_assert" "break" "case" "char" "continue" "default" "do" "double" "float" "for" "goto" "if" "int" "long" "return" "short" "signed" "struct" "switch" "typedef" "union" "unsigned" "void" "while" "}" Identifier TypedefName


}
